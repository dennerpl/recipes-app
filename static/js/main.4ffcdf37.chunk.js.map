{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","pages/images/logoMS.png","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","context/RecipesContext.js","services/drinkApiFunctions.js","services/foodApiFunctions.js","context/RecipesProvider.js","pages/Login.js","components/HeaderSearchBar.js","components/Header.js","components/Footer.js","components/MainCards.js","pages/MainRecipes.js","components/MainDrinkCards.js","pages/MainDrinks.js","components/HeaderNoSearch.js","pages/Explorer.js","pages/ExplorerFood.js","pages/ExplorerDrinks.js","components/ExploreFoodIngredientCards.js","pages/ExplorerFoodIngredients.js","pages/ExplorerDrinksIngredients.js","pages/ExplorerFoodArea.js","pages/Profile.js","components/DoneRecipesCards.js","services/localStorageFunctions.js","pages/DoneRecipes.js","components/FavoriteRecipesCards.js","pages/FavoriteRecipes.js","pages/RecipesDetails.js","pages/DrinksDetails.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RecipesContext","createContext","fetchDrinkByIngredient","ingredient","a","fetch","request","json","response","fetchDrinkByName","name","fetchDrinkByFirstLetter","letter","fetchAllDrinkRecipes","fetchAllDrinkCategories","fetchFilterDrinkByCategory","category","fetchDrinkDetailById","id","fetchRandomDrinkRecipes","fetchAllDrinkIngredients","fetchFoodByIngredient","fetchFoodByName","fetchFoodByFirstLetter","fetchAllFoodRecipes","fetchAllFoodCategories","fetchFilterFoodByCategory","fetchFoodDetailById","fetchRandomFoodRecipes","fetchAllFoodIngredients","fetchAllFoodAreas","fetchFilterFoodByArea","area","RecipesProvider","children","useState","foodDetail","setFoodDetail","drinkDetail","setDrinkDetail","setId","ingredients","setIngredients","foodsToRender","setFoodsToRender","drinksToRender","setDrinksToRender","email","password","login","setLogin","showSearchBar","setShowSearchBar","pathName","setPathName","foodData","setFoodData","drinkData","setDrinkData","redirectByIngredients","setRedirectByIngredients","usedSearchBar","setUsedSearchBar","useEffect","foodApiFunctions","then","drinkApiFunctions","drinks","meals","context","toggleSearchBar","fetchByIngredients","value","fetchByName","fetchByFirstLetter","fetchInIngredientCard","path","Provider","Login","useContext","src","logoMS","alt","type","data-testid","placeholder","onChange","e","target","to","disabled","verifyEmail","test","verifyPassword","length","verifyLogin","onClick","localStorage","clear","setItem","JSON","stringify","HeaderSearchBar","radioButtonValue","setRadioButtonValue","inputValue","setInputValue","getRadioValue","console","log","searchByText","htmlFor","if","alert","getApiData","Header","title","className","profileIcon","searchIcon","Footer","drinkIcon","exploreIcon","mealIcon","MainCards","thumb","index","MainRecipes","props","pathname","location","allFiltersToRender","setAllFiltersToRender","filtersToRender","setFiltersToRender","filtered","setFiltered","undefined","array","finalArray","filter","_someFilter","map","key","strCategory","buttonAll","push","renderFilveFilters","idMeal","_someFood","food","strMealThumb","strMeal","renderTwelveElements","MainDrinkCards","MainDrinks","idDrink","_someDrink","drink","strDrinkThumb","strDrink","HeaderNoSearch","Explorer","ExplorerFood","randomFoodId","setRandomFoodId","ExplorerDrinks","randomDrinkId","setRandomDrinkId","ExploreFoodIngredientICards","selectingSrc","ExplorerFoodIngredients","allIngredientsToRender","setAllIngredientsToRender","initialarray","ExploreFoodIngredientCards","strIngredient","idIngredient","ExplorerDrinksIngredients","strIngredient1","ExplorerFoodArea","selectedValue","setSelectedValue","allRegionFoodsToRender","setAllRegionFoodsToRender","loading","setLoading","event","regionSelected","strArea","unshift","renderFilters","Profile","DoneRecipesCards","tags","doneDate","alcoholicOrNot","copyMessage","setCopyMessage","shareIcon","urlarray","window","href","split","urlToCopy","clipboardCopy","text","returnText","url","tag","counter","getDoneRecipesLocalStorage","getItem","parse","getFavoriteRecipesLocalStorage","DoneRecipes","initialDoneRecipes","setInitialDoneRecipes","atualDoneRecipes","setAtualDoneRecipes","localStorageFunctions","arrayOfFoods","item","arrayOfDrinks","foodOrDrink","image","FavoriteRecipesCards","removeFavorite","isFavorite","blackHearthIcon","whiteHearthIcon","FavoriteRecipes","initialFavoriteRecipes","setInitialFavoriteRecipes","atualFavoriteRecipes","setAtualFavoriteRecipes","newRenderArray","arrayInString","RecipesDetails","recomended","setRecomendedDrinks","setIsFavorite","clipboard","setClipboard","settings","dots","infinite","speed","slidesToShow","slidesToScroll","copyClipboard","mensagem","recomendedDrink","allDrinks","sixDrinks","slice","idRandom","match","params","allIngredients","i","nomeIngrediente","medida","favoriteRec","strInstructions","strYoutube","DrinksDetails","setRecomendedRecipes","recomendedFood","allFoods","sixFoods","strAlcoholic","NotFound","App","basename","process","exact","component","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ffcdf37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoMS.b3385853.png\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","import { createContext } from 'react';\n\nconst RecipesContext = createContext();\n\nexport default RecipesContext;\n","export const fetchDrinkByIngredient = async (ingredient) => {\n  const request = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchDrinkByName = async (name) => {\n  const request = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchDrinkByFirstLetter = async (letter) => {\n  const request = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${letter}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchAllDrinkRecipes = async () => {\n  const request = await fetch(\n    'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchAllDrinkCategories = async () => {\n  const request = await fetch(\n    'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchFilterDrinkByCategory = async (category) => {\n  const request = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchDrinkDetailById = async (id) => {\n  const request = await fetch(\n    `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchRandomDrinkRecipes = async () => {\n  const request = await fetch(\n    'https://www.thecocktaildb.com/api/json/v1/1/random.php',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchAllDrinkIngredients = async () => {\n  const request = await fetch(\n    'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list',\n  );\n  const response = await request.json();\n  return response;\n};\n\n// export {\n//   fetchDrinkByIngredient,\n//   fetchDrinkByName,\n//   fetchDrinkByFirstLetter,\n//   fetchAllDrinkRecipes,\n//   fetchAllDrinkCategories,\n//   fetchFilterDrinkByCategory,\n//   fetchDrinkDetailById,\n//   fetchRandomDrinkRecipes,\n// };\n","export const fetchFoodByIngredient = async (ingredient) => {\n  const request = await fetch(\n    `https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchFoodByName = async (name) => {\n  const request = await fetch(\n    `https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchFoodByFirstLetter = async (letter) => {\n  const request = await fetch(\n    `https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchAllFoodRecipes = async () => {\n  const request = await fetch(\n    'https://www.themealdb.com/api/json/v1/1/search.php?s=',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchAllFoodCategories = async () => {\n  const request = await fetch(\n    'https://www.themealdb.com/api/json/v1/1/list.php?c=list',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchFilterFoodByCategory = async (category) => {\n  const request = await fetch(\n    `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchFoodDetailById = async (id) => {\n  const request = await fetch(\n    `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`,\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchRandomFoodRecipes = async () => {\n  const request = await fetch(\n    'https://www.themealdb.com/api/json/v1/1/random.php',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchAllFoodIngredients = async () => {\n  const request = await fetch(\n    'https://www.themealdb.com/api/json/v1/1/list.php?i=list',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchAllFoodAreas = async () => {\n  const request = await fetch(\n    'https://www.themealdb.com/api/json/v1/1/list.php?a=list',\n  );\n  const response = await request.json();\n  return response;\n};\n\nexport const fetchFilterFoodByArea = async (area) => {\n  const request = await fetch(\n    `https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`,\n  );\n  const response = await request.json();\n  return response;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\n\nfunction RecipesProvider({ children }) {\n  const zero = 0;\n  const [foodDetail, setFoodDetail] = useState([]);\n  const [drinkDetail, setDrinkDetail] = useState([]);\n  const [id, setId] = useState(zero);\n  const [ingredients, setIngredients] = useState([]);\n  const [foodsToRender, setFoodsToRender] = useState([]);\n  const [drinksToRender, setDrinksToRender] = useState([]);\n  const [login, setLogin] = useState({ email: '', password: '' });\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [pathName, setPathName] = useState('');\n  const [foodData, setFoodData] = useState([]);\n  const [drinkData, setDrinkData] = useState([]);\n  const [redirectByIngredients, setRedirectByIngredients] = useState(false);\n  const [usedSearchBar, setUsedSearchBar] = useState(false);\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then((response) => setFoodData(response));\n  }, []);\n  useEffect(() => {\n    drinkApiFunctions.fetchAllDrinkRecipes().then((response) => setDrinkData(response));\n  }, []);\n  useEffect(() => {\n    setDrinksToRender(drinkData.drinks);\n  }, [drinkData]);\n  useEffect(() => {\n    setFoodsToRender(foodData.meals);\n  }, [foodData]);\n  const toggleSearchBar = () => {\n    setShowSearchBar(!showSearchBar);\n  };\n  const fetchByIngredients = (value) => {\n    if (pathName === '/comidas') {\n      foodApiFunctions\n        .fetchFoodByIngredient(value)\n        .then((response) => setFoodsToRender(response.meals));\n      setUsedSearchBar(true);\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByIngredient(value)\n        .then((response) => setDrinksToRender(response.drinks));\n      setUsedSearchBar(true);\n    }\n  };\n  const fetchInIngredientCard = (ingredient, path) => {\n    if (path === '/explorar/comidas/ingredientes') {\n      foodApiFunctions\n        .fetchFoodByIngredient(ingredient)\n        .then((response) => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByIngredient(ingredient)\n        .then((response) => setDrinksToRender(response.drinks));\n    }\n    setRedirectByIngredients(true);\n  };\n  const fetchByName = (value) => {\n    if (pathName === '/comidas') {\n      foodApiFunctions\n        .fetchFoodByName(value)\n        .then((response) => setFoodsToRender(response.meals));\n      setUsedSearchBar(true);\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByName(value)\n        .then((response) => setDrinksToRender(response.drinks));\n      setUsedSearchBar(true);\n    }\n  };\n  const fetchByFirstLetter = (value) => {\n    if (pathName === '/comidas') {\n      foodApiFunctions\n        .fetchFoodByFirstLetter(value)\n        .then((response) => setFoodsToRender(response.meals));\n      setUsedSearchBar(true);\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByFirstLetter(value)\n        .then((response) => setDrinksToRender(response.drinks));\n      setUsedSearchBar(true);\n    }\n  };\n\n  const context = {\n    login,\n    setLogin,\n    foodDetail,\n    setFoodDetail,\n    drinkDetail,\n    setDrinkDetail,\n    id,\n    setId,\n    ingredients,\n    setIngredients,\n    showSearchBar,\n    toggleSearchBar,\n    pathName,\n    setPathName,\n    foodsToRender,\n    setFoodsToRender,\n    drinksToRender,\n    setDrinksToRender,\n    fetchByIngredients,\n    fetchByName,\n    fetchByFirstLetter,\n    foodData,\n    drinkData,\n    fetchInIngredientCard,\n    setRedirectByIngredients,\n    redirectByIngredients,\n    setUsedSearchBar,\n    usedSearchBar,\n  };\n  return (\n    <div>\n      <RecipesContext.Provider value={ context }>\n        {children}\n      </RecipesContext.Provider>\n    </div>\n  );\n}\nRecipesProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\nexport default RecipesProvider;\n// import * as localStorageFunctions from '../services/localStorageFunctions';\n// const doneRecipe1 = {\n//   id: '52772',\n//   type: 'comidas',\n//   area: 'Japanese',\n//   category: 'Chicken',\n//   alcoholicOrNot: '',\n//   name: 'Teriyaki Chicken Casserole',\n//   image: 'https://www.themealdb.com/images/media/meals/wvpsxx1468256321.jpg',\n//   doneDate: '03-02-2021',\n//   tags: ['Meat', 'Casserole'],\n// };\n// const doneRecipe2 = {\n//   id: '11007',\n//   type: 'bebidas',\n//   area: '',\n//   category: 'Ordinary Drink',\n//   alcoholicOrNot: 'Alcoholic',\n//   name: 'Margarita',\n//   image:\n//   'https://www.thecocktaildb.com/images/media/drink/5noda61589575158.jpg',\n//   doneDate: '03-02-2021',\n//   tags: ['IBA', 'ContemporaryClassic'],\n// };\n// useEffect(() => {\n//   localStorageFunctions.putFavoriteRecipesLocalStorage(doneRecipe1);\n//   localStorageFunctions.putFavoriteRecipesLocalStorage(doneRecipe2);\n// });\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecipesContext from '../context/RecipesContext';\nimport logoMS from './images/logoMS.png';\n\nfunction Login() {\n  const { login, setLogin } = useContext(RecipesContext);\n  const { email, password } = login;\n\n  const verifyPass = () => {\n    const SEVEN = 7;\n    const validatePassword = password.length >= SEVEN;\n    return validatePassword;\n  };\n  const verify = () => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    const validate = regex.test(email);\n    return validate;\n  };\n  const verifyLogin = () => {\n    const verifyEmail = verify();\n    const verifyPassword = verifyPass();\n    if (verifyEmail && verifyPassword) {\n      return false;\n    }\n    return true;\n  };\n  const submitLogin = () => {\n    localStorage.clear();\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', JSON.stringify(1));\n    localStorage.setItem('cocktailsToken', JSON.stringify(1));\n  };\n\n  return (\n    <div id=\"loginElements\">\n      <div>\n        <img src={ logoMS } alt=\"logo\" />\n        <form id=\"form-login\">\n          <input\n            name=\"email\"\n            type=\"email\"\n            data-testid=\"email-input\"\n            placeholder=\"Digite seu e-mail\"\n            onChange={ (e) => setLogin({ ...login, email: e.target.value }) }\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            data-testid=\"password-input\"\n            placeholder=\"Digite sua senha\"\n            onChange={ (e) => setLogin({ ...login, password: e.target.value }) }\n          />\n          <Link to=\"/comidas\">\n            <button\n              type=\"button\"\n              data-testid=\"login-submit-btn\"\n              disabled={ verifyLogin() }\n              onClick={ submitLogin }\n            >\n              Logar\n            </button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default Login;\n","import React, { useState, useContext } from 'react';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction HeaderSearchBar() {\n  const {\n    pathName,\n    fetchByIngredients,\n    fetchByName,\n    fetchByFirstLetter,\n  } = useContext(RecipesContext);\n  const [radioButtonValue, setRadioButtonValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n\n  const searchByText = (e) => {\n    setInputValue(e.target.value);\n    console.log(inputValue);\n  };\n\n  const getRadioValue = (e) => {\n    setRadioButtonValue(e.target.value);\n    console.log(radioButtonValue);\n  };\n  const getApiData = () => {\n    console.log(pathName);\n    if (inputValue.length > 1 && radioButtonValue === 'primeiraLetra') {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      switch (radioButtonValue) {\n      case 'ingrediente':\n        fetchByIngredients(inputValue);\n        break;\n      case 'nome':\n        fetchByName(inputValue);\n        break;\n\n      default:\n        fetchByFirstLetter(inputValue);\n        break;\n      }\n    }\n  };\n\n  return (\n    <div id=\"headerSearchBar\">\n      <input\n        type=\"text\"\n        id=\"searchInput\"\n        placeholder=\"Buscar Receita\"\n        data-testid=\"search-input\"\n        name=\"searchText\"\n        onChange={ (e) => searchByText(e) }\n      />\n      <div>\n        <label htmlFor=\"ingredients\">\n          <input\n            type=\"radio\"\n            id=\"ingredients\"\n            name=\"searchType\"\n            value=\"ingrediente\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={ (e) => getRadioValue(e) }\n          />\n          Ingrediente\n        </label>\n        <label htmlFor=\"name\">\n          <input\n            type=\"radio\"\n            id=\"name\"\n            name=\"searchType\"\n            value=\"nome\"\n            data-testid=\"name-search-radio\"\n            onChange={ (e) => getRadioValue(e) }\n          />\n          Nome\n        </label>\n        <label htmlFor=\"firstLetter\">\n          <input\n            type=\"radio\"\n            if=\"firstLetter\"\n            name=\"searchType\"\n            value=\"primeiraLetra\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ (e) => getRadioValue(e) }\n          />\n          Primeira Letra\n        </label>\n      </div>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => getApiData() }\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nexport default HeaderSearchBar;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport RecipesContext from '../context/RecipesContext';\nimport HeaderSearchBar from './HeaderSearchBar';\n\nfunction Header({ title }) {\n  const { toggleSearchBar, showSearchBar } = useContext(RecipesContext);\n  return (\n    <div>\n      <header>\n        <div>\n          <Link to=\"/perfil\">\n            <img\n              className=\"title\"\n              src={ profileIcon }\n              alt=\"Imagem do profile\"\n              data-testid=\"profile-top-btn\"\n            />\n          </Link>\n          <button type=\"button\" onClick={(e) => toggleSearchBar(e)}>\n            <img\n              src={ searchIcon }\n              alt=\"Imagem do profile\"\n              data-testid=\"search-top-btn\"\n            />\n          </button>\n        </div>\n        <div>\n          <h2 className=\"title\" data-testid=\"page-title\">\n            {title}\n          </h2>\n        </div>\n      </header>\n      {showSearchBar && <HeaderSearchBar />}\n    </div>\n  );\n}\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport './footer.css';\n\nfunction Footer() {\n  return (\n    <footer\n      className=\"footer\"\n      data-testid=\"footer\"\n    >\n      <Link to=\"/bebidas\">\n        <img\n          src={ drinkIcon }\n          data-testid=\"drinks-bottom-btn\"\n          className=\"drinkIcon\"\n          alt=\"explorar drinks\"\n        />\n      </Link>\n      <Link to=\"/explorar\">\n        <img\n          src={ exploreIcon }\n          data-testid=\"explore-bottom-btn\"\n          className=\"exploreIcon\"\n          alt=\"explorar\"\n        />\n      </Link>\n      <Link to=\"/comidas\">\n        <img\n          src={ mealIcon }\n          data-testid=\"food-bottom-btn\"\n          className=\"mealIcon\"\n          alt=\"explorar comidas\"\n        />\n      </Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MainCards({ thumb, title, index, id }) {\n  return (\n    <Link to={ `/comidas/${id}` }>\n      <div data-testid={ `${index}-recipe-card` }>\n        <img\n          id=\"foodImg\"\n          src={ thumb }\n          alt=\"Imagem do profile\"\n          data-testid={ `${index}-card-img` }\n        />\n        <div className=\"div\" data-testid=\"page-div\">\n          <p data-testid={ `${index}-card-name` }>{title}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nMainCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default MainCards;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainCards from '../components/MainCards';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction MainRecipes(props) {\n  const { location } = props;\n  const { pathname } = location;\n  const { setPathName, setRedirectByIngredients } = useContext(RecipesContext);\n  const { foodsToRender, setFoodsToRender, foodData } = useContext(\n    RecipesContext,\n  );\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [filtersToRender, setFiltersToRender] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n\n  useEffect(() => {\n    foodApiFunctions\n      .fetchAllFoodCategories()\n      .then((response) => setAllFiltersToRender(response));\n  }, []);\n\n  useEffect(() => {\n    setRedirectByIngredients(false);\n  });\n\n  useEffect(() => {\n    setPathName(pathname);\n  });\n\n  useEffect(() => {\n    setFiltersToRender(allFiltersToRender.meals);\n  }, [allFiltersToRender]);\n  const renderTwelveElements = (array) => {\n    if (array === null) {\n      return alert(\n        \"Sinto muito, não encontramos nenhuma receita para esses filtros.\"\n      );\n    }\n\n    if (array.length === 1) {\n      return <Redirect to={ `/comidas/${array[0].idMeal}` } />;\n    }\n    const eleven = 11;\n\n    const finalArray = array\n      .filter((_someFood, index) => index <= eleven)\n      .map((food, index) => (\n        <MainCards\n          thumb={ food.strMealThumb }\n          title={ food.strMeal }\n          key={ index }\n          index={ index }\n          id={ food.idMeal }\n        />\n      ));\n    return finalArray;\n  };\n\n  const filterButton = (category) => {\n    if (filtered === false) {\n      // const oldArray = [...data.meals];\n      // const newArray = oldArray.filter((food) => food.strCategory === category);\n      foodApiFunctions\n        .fetchFilterFoodByCategory(category)\n        .then((response) => setFoodsToRender(response.meals));\n      setFiltered(true);\n    } else {\n      setFoodsToRender(foodData.meals);\n      setFiltered(false);\n    }\n  };\n\n  const resetFoodsToRender = () => {\n    setFoodsToRender(foodData.meals);\n    setFiltered(false);\n  };\n\n  const renderFilveFilters = (array) => {\n    const four = 4;\n    const finalArray = array\n      .filter((_someFilter, index) => index <= four)\n      .map((filter, index) => (\n        <button\n          type=\"button\"\n          key={ index }\n          data-testid={ `${filter.strCategory}-category-filter` }\n          onClick={ () => filterButton(filter.strCategory) }\n        >\n          {filter.strCategory}\n        </button>\n      ));\n\n    const buttonAll = (\n      <button\n        type=\"button\"\n        key=\"all\"\n        data-testid=\"All-category-filter\"\n        onClick={() => resetFoodsToRender()}\n      >\n        All\n      </button>\n    );\n    finalArray.push(buttonAll);\n    return finalArray;\n  };\n\n  return (\n    <div id=\"foodElements\">\n      <Header title=\"Comidas\" />\n      {filtersToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <div className=\"filterButtons\">{renderFilveFilters(filtersToRender)}</div>\n      )}\n      {foodsToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <div id=\"foods\">{renderTwelveElements(foodsToRender)}</div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nMainRecipes.propTypes = {\n  location: PropTypes.shape({\n    hash: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    state: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default MainRecipes;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MainDrinkCards({ thumb, title, index, id }) {\n  return (\n    <Link to={ `/bebidas/${id}` }>\n      <div data-testid={ `${index}-recipe-card` }>\n        <img\n          id=\"drinkImg\"\n          src={ thumb }\n          alt=\"Imagem do profile\"\n          data-testid={ `${index}-card-img` }\n        />\n        <div>\n          <div className=\"div\" data-testid=\"page-div\">\n            <p data-testid={ `${index}-card-name` }>{title}</p>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nMainDrinkCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default MainDrinkCards;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainDrinkCards from '../components/MainDrinkCards';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction MainDrinks(props) {\n  const { location } = props;\n  const { pathname } = location;\n  const { setPathName, setRedirectByIngredients, usedSearchBar } = useContext(\n    RecipesContext,\n  );\n  const { drinksToRender, setDrinksToRender, drinkData } = useContext(RecipesContext);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [filtersToRender, setFiltersToRender] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n\n  useEffect(() => {\n    setPathName(pathname);\n  });\n\n  useEffect(() => {\n    setRedirectByIngredients(false);\n  });\n\n  useEffect(() => {\n    drinkApiFunctions\n      .fetchAllDrinkCategories()\n      .then((response) => setAllFiltersToRender(response));\n  }, []);\n\n  useEffect(() => {\n    setFiltersToRender(allFiltersToRender.drinks);\n  }, [allFiltersToRender]);\n\n  const renderTwelveElements = (array) => {\n    if (array === null) {\n      return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n    if ((array.length === 1) && usedSearchBar) {\n      return <Redirect to={ `/bebidas/${array[0].idDrink}` } />;\n    }\n    const eleven = 11;\n    const finalArray = array\n      .filter((_someDrink, index) => index <= eleven)\n      .map((drink, index) => (\n        <MainDrinkCards\n          thumb={ drink.strDrinkThumb }\n          title={ drink.strDrink }\n          key={ index }\n          index={ index }\n          id={ drink.idDrink }\n        />\n      ));\n    return finalArray;\n  };\n\n  const filterButton = (category) => {\n    if (filtered === false) {\n      // const oldArray = [...data.drinks];\n      // const newArray = oldArray.filter((food) => food.strCategory === category);\n      drinkApiFunctions\n        .fetchFilterDrinkByCategory(category)\n        .then((response) => setDrinksToRender(response.drinks));\n      setFiltered(true);\n    } else {\n      setDrinksToRender(drinkData.drinks);\n      setFiltered(false);\n    }\n  };\n\n  const resetDrinksToRender = () => {\n    setDrinksToRender(drinkData.drinks);\n    setFiltered(false);\n  };\n\n  const renderFilveFilters = (array) => {\n    const four = 4;\n    const finalArray = array\n      .filter((_someFilter, index) => index <= four)\n      .map((filter, index) => (\n        <button\n          type=\"button\"\n          key={ index }\n          data-testid={ `${filter.strCategory}-category-filter` }\n          onClick={ () => filterButton(filter.strCategory) }\n        >\n          {filter.strCategory}\n        </button>\n      ));\n    const buttonAll = (\n      <button\n        type=\"button\"\n        key=\"all\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => resetDrinksToRender() }\n      >\n        All\n      </button>\n    );\n    finalArray.push(buttonAll);\n    return finalArray;\n  };\n\n  return (\n    <div id=\"drinkElements\">\n      <Header title=\"Bebidas\" />\n      {filtersToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <div className=\"filterButtons\">{renderFilveFilters(filtersToRender)}</div>\n      )}\n      {drinksToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <div id=\"drinks\">{renderTwelveElements(drinksToRender)}</div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nMainDrinks.propTypes = {\n  location: PropTypes.shape({\n    hash: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    state: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default MainDrinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\n\nfunction HeaderNoSearch({ title }) {\n  return (\n    <header id=\"headerProfile\">\n      <Link to=\"/perfil\">\n        <img\n          className=\"title\"\n          src={ profileIcon }\n          alt=\"Imagem do profile\"\n          data-testid=\"profile-top-btn\"\n        />\n      </Link>\n      <div\n        className=\"title\"\n        data-testid=\"page-title\"\n      >\n        <h2>\n          { title }\n        </h2>\n      </div>\n    </header>\n  );\n}\n\nHeaderNoSearch.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default HeaderNoSearch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport Footer from '../components/Footer';\n\nfunction Explorer() {\n  return (\n    <div className=\"profiles\">\n      <HeaderNoSearch title=\"Explorar\" />\n      <div>\n        <div className=\"profile-buttons\">\n          <Link to=\"/explorar/comidas\">\n            <button type=\"button\" data-testid=\"explore-food\">\n              Explorar Comidas\n            </button>\n          </Link>\n          <Link to=\"/explorar/bebidas\">\n            <button type=\"button\" data-testid=\"explore-drinks\">\n              Explorar Bebidas\n            </button>\n          </Link>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explorer;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport Footer from '../components/Footer';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\n\nfunction ExplorerFood() {\n  const [randomFoodId, setRandomFoodId] = useState('');\n  useEffect(() => {\n    foodApiFunctions\n      .fetchRandomFoodRecipes()\n      .then((response) => setRandomFoodId(response.meals[0].idMeal));\n  }, []);\n  return (\n    <div className=\"profiles\">\n      <HeaderNoSearch title=\"Explorar Comidas\" />\n      <div>\n        <div className=\"profile-buttons\">\n          <Link to=\"/explorar/comidas/ingredientes\">\n            <button type=\"button\" data-testid=\"explore-by-ingredient\">\n              Por Ingredientes\n            </button>\n          </Link>\n          <Link to=\"/explorar/comidas/area\">\n            <button type=\"button\" data-testid=\"explore-by-area\">\n              Por Local de Origem\n            </button>\n          </Link>\n          <Link to={ `/comidas/${randomFoodId}` }>\n            <button type=\"button\" data-testid=\"explore-surprise\">\n              Me Surpreenda!\n            </button>\n          </Link>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerFood;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport Footer from '../components/Footer';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\n\nfunction ExplorerDrinks() {\n  const [randomDrinkId, setRandomDrinkId] = useState('');\n  useEffect(() => {\n    drinkApiFunctions\n      .fetchRandomDrinkRecipes()\n      .then((response) => setRandomDrinkId(response.drinks[0].idDrink));\n  }, []);\n  return (\n    <div className=\"profiles\">\n      <HeaderNoSearch title=\"Explorar Bebidas\" />\n      <div>\n        <div className=\"profile-buttons\">\n          <Link to=\"/explorar/bebidas/ingredientes\">\n            <button type=\"button\" data-testid=\"explore-by-ingredient\">\n              Por Ingredientes\n            </button>\n          </Link>\n          <Link to={ `/bebidas/${randomDrinkId}` }>\n            <button type=\"button\" data-testid=\"explore-surprise\">\n              Me Surpreenda!\n            </button>\n          </Link>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerDrinks;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction ExploreFoodIngredientICards({ title, index, path }) {\n  const { fetchInIngredientCard, redirectByIngredients } = useContext(RecipesContext);\n\n  const pathToRedirect = (pathName) => {\n    if (pathName === '/explorar/comidas/ingredientes') {\n      return '/comidas';\n    }\n    return '/bebidas';\n  };\n\n  const selectingSrc = (pathName, ingredient) => {\n    let source = '';\n    if (pathName === '/explorar/comidas/ingredientes') {\n      source = `https://www.themealdb.com/images/ingredients/${ingredient}-Small.png`;\n    } else {\n      source = `https://www.thecocktaildb.com/images/ingredients/${ingredient}-Small.png`;\n    }\n    return source;\n  };\n\n  if (redirectByIngredients) {\n    return <Redirect to={ pathToRedirect(path) } />;\n  }\n\n  return (\n    <button type=\"button\" onClick={ () => fetchInIngredientCard(title, path) }>\n      <div data-testid={ `${index}-ingredient-card` }>\n        <img\n          src={ selectingSrc(path, title) }\n          alt=\"Imagem do profile\"\n          data-testid={ `${index}-card-img` }\n        />\n        <div className=\"div\" data-testid=\"page-div\">\n          <p data-testid={ `${index}-card-name` }>{title}</p>\n        </div>\n      </div>\n    </button>\n  );\n}\n\nExploreFoodIngredientICards.propTypes = {\n  title: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default ExploreFoodIngredientICards;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport ExploreFoodIngredientCards from '../components/ExploreFoodIngredientCards';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport Footer from '../components/Footer';\n\nfunction ExplorerFoodIngredients(props) {\n  const { location } = props;\n  const { pathname } = location;\n  const [allIngredientsToRender, setAllIngredientsToRender] = useState([]);\n  useEffect(() => {\n    foodApiFunctions\n      .fetchAllFoodIngredients()\n      .then((response) => setAllIngredientsToRender(response.meals));\n  }, []);\n\n  const renderTwelveElements = (array, path) => {\n    const initialarray = [...array];\n    initialarray.length = 12;\n    const finalArray = initialarray\n      .map((ingredient, index) => (\n        <ExploreFoodIngredientCards\n          title={ ingredient.strIngredient }\n          key={ index }\n          index={ index }\n          id={ ingredient.idIngredient }\n          path={ path }\n        />\n      ));\n    return finalArray;\n  };\n  return (\n    <div id=\"explorer-ingredients\">\n      <HeaderNoSearch title=\"Explorar Ingredientes\" />\n      {allIngredientsToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <div id=\"ingredient-cards\">\n          {renderTwelveElements(allIngredientsToRender, pathname)}\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nExplorerFoodIngredients.propTypes = {\n  location: PropTypes.shape({\n    hash: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    state: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default ExplorerFoodIngredients;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport ExploreFoodIngredientCards from '../components/ExploreFoodIngredientCards';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport Footer from '../components/Footer';\n\nfunction ExplorerDrinksIngredients(props) {\n  const { location } = props;\n  const { pathname } = location;\n  const [allIngredientsToRender, setAllIngredientsToRender] = useState([]);\n  useEffect(() => {\n    drinkApiFunctions\n      .fetchAllDrinkIngredients()\n      .then((response) => setAllIngredientsToRender(response.drinks));\n  }, []);\n\n  const renderTwelveElements = (array, path) => {\n    // if (array === null) {\n    //   return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    // }\n    // if (array.length === 1) {\n    //   return <Redirect to={ `/comidas/${array[0].idMeal}` } />;\n    // }\n    // const eleven = 11;\n    const initialarray = [...array];\n    initialarray.length = 12;\n    const finalArray = initialarray\n      .map((ingredient, index) => (\n        <ExploreFoodIngredientCards\n          title={ ingredient.strIngredient1 }\n          key={ index }\n          index={ index }\n          path={ path }\n        />\n      ));\n    return finalArray;\n  };\n  return (\n    <div id=\"explorer-ingredients\">\n      <HeaderNoSearch title=\"Explorar Ingredientes\" />\n      {allIngredientsToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <div id=\"ingredient-cards\">\n          {renderTwelveElements(allIngredientsToRender, pathname)}\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nExplorerDrinksIngredients.propTypes = {\n  location: PropTypes.shape({\n    hash: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    state: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default ExplorerDrinksIngredients;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainCards from '../components/MainCards';\n\nfunction ExplorerFoodArea() {\n  const [foodData, setFoodData] = useState([]);\n  const [selectedValue, setSelectedValue] = useState('all');\n  const [allRegionFoodsToRender, setAllRegionFoodsToRender] = useState([]);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then((response) => setFoodData(response));\n  }, []);\n  useEffect(() => {\n    setAllRegionFoodsToRender(foodData.meals);\n  }, [foodData]);\n  useEffect(() => {\n    foodApiFunctions\n      .fetchAllFoodAreas()\n      .then((response) => setAllFiltersToRender(response.meals));\n  }, []);\n  useEffect(() => {\n    const resetFoodsToRender = () => {\n      setAllRegionFoodsToRender(foodData.meals);\n    };\n    setLoading(true);\n    if (selectedValue === 'all') {\n      resetFoodsToRender();\n    } else {\n      foodApiFunctions\n        .fetchFilterFoodByArea(selectedValue)\n        .then((response) => setAllRegionFoodsToRender(response.meals));\n    }\n    setLoading(false);\n  }, [selectedValue, foodData]);\n\n  const regionSelected = (event) => {\n    const { target } = event;\n    const { value } = target;\n    setSelectedValue(value);\n  };\n\n  const renderFilters = (array) => {\n    const finalArray = array.map((filter, index) => (\n      <option\n        key={ index }\n        value={ filter.strArea }\n        data-testid={ `${filter.strArea}-option` }\n      >\n        {filter.strArea}\n      </option>\n    ));\n    const buttonAll = (\n      <option key=\"all\" value=\"all\" data-testid=\"All-option\">All</option>\n    );\n    finalArray.unshift(buttonAll);\n    return finalArray;\n  };\n  const renderTwelveElements = (array) => {\n    if (array === null) {\n      return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n    if (array.length === 1) {\n      return <Redirect to={ `/comidas/${array[0].idMeal}` } />;\n    }\n    const eleven = 11;\n    const finalArray = array\n      .filter((_someFood, index) => index <= eleven)\n      .map((food, index) => (\n        <MainCards\n          thumb={ food.strMealThumb }\n          title={ food.strMeal }\n          key={ index }\n          index={ index }\n          id={ food.idMeal }\n        />\n      ));\n    return finalArray;\n  };\n  return (\n    <div id=\"explorer-area\">\n      <Header title=\"Explorar Origem\" />\n      {allFiltersToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <select\n          value={ selectedValue }\n          onChange={ (e) => regionSelected(e) }\n          data-testid=\"explore-by-area-dropdown\"\n        >\n          {renderFilters(allFiltersToRender)}\n        </select>\n      )}\n      {allRegionFoodsToRender === undefined || loading === true ? (\n        <p>Loading</p>\n      ) : (\n        <div id=\"foods-found\">\n          {renderTwelveElements(allRegionFoodsToRender)}\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerFoodArea;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\n// import * as localStorageFunc from '../services/localStorageFunctions';\nimport Footer from '../components/Footer';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction Profile() {\n  const { login } = useContext(RecipesContext);\n  return (\n    <div className=\"profiles\">\n      <HeaderNoSearch title=\"Perfil\" />\n      <div>\n        <section\n          type=\"email\"\n          id=\"email\"\n          data-testid=\"profile-email\"\n        >\n          <p><strong>{`User: ${login.email}`}</strong></p>\n        </section>\n        <div className=\"profile-buttons\">\n          <Link to=\"/receitas-feitas\">\n            <button\n              type=\"button\"\n              data-testid=\"profile-done-btn\"\n            >\n              Receitas Feitas\n            </button>\n          </Link>\n          <Link to=\"/receitas-favoritas\">\n            <button\n              type=\"button\"\n              data-testid=\"profile-favorite-btn\"\n            >\n              Receitas Favoritas\n            </button>\n          </Link>\n          <Link to=\"/\">\n            <button\n              type=\"button\"\n              data-testid=\"profile-logout-btn\"\n            >\n              Sair\n            </button>\n          </Link>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport './donerecipes.css';\n\nfunction DoneRecipesCards({\n  thumb,\n  title,\n  index,\n  id,\n  type,\n  tags,\n  category,\n  doneDate,\n  area,\n  alcoholicOrNot,\n}) {\n  const [copyMessage, setCopyMessage] = useState('');\n  const url = (text) => {\n    let returnText = '';\n    switch (text) {\n    case 'bebida':\n      returnText = 'bebidas';\n      break;\n    case 'comida':\n      returnText = 'comidas';\n      break;\n    default:\n      returnText = text;\n      break;\n    }\n    return returnText;\n  };\n\n  const copyClipboard = () => {\n    const urlarray = window.location.href.split('/');\n    const urlToCopy = `${urlarray[0]}//${urlarray[2]}/${type}s/${id}`;\n    clipboardCopy(urlToCopy);\n    setCopyMessage('Link copiado!');\n  };\n\n  return (\n    <div>\n      <input\n        type=\"image\"\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n        alt=\"compartilhar\"\n        onClick={ copyClipboard }\n      />\n      {copyMessage}\n      <Link to={ `/${url(type)}/${id}` }>\n        <div className=\"img_recipes\">\n          <img\n            src={ thumb }\n            alt=\"Imagem do profile\"\n            data-testid={ `${index}-horizontal-image` }\n          />\n          <div>\n            Category:\n            {' '}\n            <p data-testid={ `${index}-horizontal-top-text` }>\n              {`${area}${alcoholicOrNot} - ${category}`}\n            </p>\n          </div>\n          <div className=\"div\" data-testid=\"page-div\">\n            <p data-testid={ `${index}-horizontal-name` }>{title}</p>\n          </div>\n          <div>\n            Feito em:\n            {' '}\n            <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n          </div>\n          {tags.map((tag, counter) => (\n            <p key={ counter } data-testid={ `${index}-${tag}-horizontal-tag` }>\n              {tag}\n            </p>\n          ))}\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nDoneRecipesCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default DoneRecipesCards;\n","export function getEmailLocalStorage() {\n  if (localStorage.getItem('user') === null) {\n    localStorage.setItem('user', '{ email: initial@gmail.com}');\n  }\n  return JSON.parse(localStorage.getItem('user'));\n}\n\nexport function setEmailLocalStorage(userEmail) {\n  localStorage.setItem('user', `{ email: ${userEmail}}`);\n}\n\nexport function setTokens() {\n  localStorage.setItem('mealsToken', '1');\n  localStorage.setItem('cocktailsToken', '1');\n}\n\nexport function getDoneRecipesLocalStorage() {\n  if (localStorage.getItem('doneRecipes') === null) {\n    localStorage.setItem('doneRecipes', '[]');\n  }\n  return JSON.parse(localStorage.getItem('doneRecipes'));\n}\n\nexport function putDoneRecipesLocalStorage(recipe) {\n  const atualArray = getDoneRecipesLocalStorage();\n  atualArray.push(recipe);\n  const newArrayInString = JSON.stringify(atualArray);\n  localStorage.setItem('doneRecipes', newArrayInString);\n}\n\nexport function getFavoriteRecipesLocalStorage() {\n  if (localStorage.getItem('favoriteRecipes') === null) {\n    localStorage.setItem('favoriteRecipes', '[]');\n  }\n  return JSON.parse(localStorage.getItem('favoriteRecipes'));\n}\n\nexport function putFavoriteRecipesLocalStorage(recipe) {\n  const atualArray = getFavoriteRecipesLocalStorage();\n  atualArray.push(recipe);\n  const newArrayInString = JSON.stringify(atualArray);\n  localStorage.setItem('favoriteRecipes', newArrayInString);\n}\n\nexport function getRecipesInProgressLocalStorage() {\n  if (localStorage.getItem('inProgressRecipes') === null) {\n    localStorage.setItem('inProgressRecipes', '{}');\n  }\n  return JSON.parse(localStorage.getItem('inProgressRecipes'));\n}\n","import React, { useState, useEffect } from 'react';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport DoneRecipesCards from '../components/DoneRecipesCards';\nimport * as localStorageFunctions from '../services/localStorageFunctions';\n\nfunction DoneRecipes() {\n  const [initialDoneRecipes, setInitialDoneRecipes] = useState([]);\n  const [atualDoneRecipes, setAtualDoneRecipes] = useState([]);\n\n  useEffect(() => {\n    setInitialDoneRecipes(localStorageFunctions.getDoneRecipesLocalStorage());\n  }, []);\n\n  useEffect(() => {\n    setAtualDoneRecipes(initialDoneRecipes);\n  }, [initialDoneRecipes]);\n\n  const filterByFoods = () => {\n    const arrayOfFoods = atualDoneRecipes.filter((item) => item.type === 'comida');\n    setAtualDoneRecipes(arrayOfFoods);\n  };\n\n  const filterByDrinks = () => {\n    const arrayOfDrinks = atualDoneRecipes.filter((item) => item.type === 'bebida');\n    setAtualDoneRecipes(arrayOfDrinks);\n  };\n\n  const resetArrayToRender = () => {\n    setAtualDoneRecipes(initialDoneRecipes);\n  };\n\n  const renderElements = (array) => {\n    const initialarray = [...array];\n    const finalArray = initialarray\n      .map((foodOrDrink, index) => (\n        <DoneRecipesCards\n          title={ foodOrDrink.name }\n          key={ index }\n          index={ index }\n          id={ foodOrDrink.id }\n          thumb={ foodOrDrink.image }\n          type={ foodOrDrink.type }\n          tags={ foodOrDrink.tags }\n          category={ foodOrDrink.category }\n          doneDate={ foodOrDrink.doneDate }\n          area={ foodOrDrink.area }\n          alcoholicOrNot={ foodOrDrink.alcoholicOrNot }\n        />\n      ));\n    return finalArray;\n  };\n  return (\n    <div className=\"profiles\">\n      <HeaderNoSearch title=\"Receitas Feitas\" />\n      <div>\n        <div className=\"profile-buttons\">\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ resetArrayToRender }\n          >\n            All\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ filterByFoods }\n          >\n            Food\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ filterByDrinks }\n          >\n            Drinks\n          </button>\n        </div>\n      </div>\n      {atualDoneRecipes === undefined ? (\n        <p>Loading</p>\n      ) : (\n        renderElements(atualDoneRecipes)\n      )}\n    </div>\n  );\n}\n\nexport default DoneRecipes;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport './donerecipes.css';\n\nfunction FavoriteRecipesCards({\n  thumb,\n  title,\n  index,\n  id,\n  type,\n  category,\n  area,\n  alcoholicOrNot,\n  removeFavorite,\n}) {\n  const [copyMessage, setCopyMessage] = useState('');\n  const [isFavorite] = useState(true);\n  const url = (text) => {\n    let returnText = '';\n    switch (text) {\n    case 'bebida':\n      returnText = 'bebidas';\n      break;\n    case 'comida':\n      returnText = 'comidas';\n      break;\n    default:\n      returnText = text;\n      break;\n    }\n    return returnText;\n  };\n\n  const copyClipboard = () => {\n    const urlarray = window.location.href.split('/');\n    const urlToCopy = `${urlarray[0]}//${urlarray[2]}/${type}s/${id}`;\n    clipboardCopy(urlToCopy);\n    setCopyMessage('Link copiado!');\n  };\n\n  return (\n    <div className=\"favoriteCard\">\n      <div className=\"img_recipes\">\n        <img\n          src={ thumb }\n          alt=\"Imagem do profile\"\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </div>\n      <div id=\"infos-recipe\">\n        <div>\n          Category:\n          {' '}\n          <p data-testid={ `${index}-horizontal-top-text` }>\n            {`${area}${alcoholicOrNot} - ${category}`}\n          </p>\n        </div>\n        <Link to={ `/${url(type)}/${id}` }>\n          <div className=\"div\" data-testid=\"page-div\">\n            <p data-testid={ `${index}-horizontal-name` }>{title}</p>\n          </div>\n        </Link>\n        <div className=\"interation-buttons\">\n          <input\n            type=\"image\"\n            data-testid={ `${index}-horizontal-share-btn` }\n            src={ shareIcon }\n            alt=\"compartilhar\"\n            onClick={ copyClipboard }\n          />\n          {copyMessage}\n          <input\n            type=\"image\"\n            onClick={ () => removeFavorite(id) }\n            data-testid={ `${index}-horizontal-favorite-btn` }\n            src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n            alt=\"Icone Favoritar\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nFavoriteRecipesCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  removeFavorite: PropTypes.func.isRequired,\n};\n\nexport default FavoriteRecipesCards;\n","import React, { useState, useEffect } from 'react';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport FavoriteRecipesCards from '../components/FavoriteRecipesCards';\nimport * as localStorageFunctions from '../services/localStorageFunctions';\n\nfunction FavoriteRecipes() {\n  const [initialFavoriteRecipes, setInitialFavoriteRecipes] = useState([]);\n  const [atualFavoriteRecipes, setAtualFavoriteRecipes] = useState([]);\n\n  useEffect(() => {\n    setInitialFavoriteRecipes(localStorageFunctions.getFavoriteRecipesLocalStorage());\n  }, []);\n\n  useEffect(() => {\n    setAtualFavoriteRecipes(initialFavoriteRecipes);\n  }, [initialFavoriteRecipes]);\n\n  const filterByFoods = () => {\n    const arrayOfFoods = atualFavoriteRecipes.filter((item) => item.type === 'comida');\n    setAtualFavoriteRecipes(arrayOfFoods);\n  };\n\n  const filterByDrinks = () => {\n    const arrayOfDrinks = atualFavoriteRecipes.filter((item) => item.type === 'bebida');\n    setAtualFavoriteRecipes(arrayOfDrinks);\n  };\n\n  const resetArrayToRender = () => {\n    setAtualFavoriteRecipes(initialFavoriteRecipes);\n  };\n\n  const removeFavorite = (id) => {\n    const atualRenderArray = atualFavoriteRecipes;\n    const newRenderArray = atualRenderArray.filter((item) => item.id !== id);\n    const arrayInString = JSON.stringify(newRenderArray);\n    localStorage.setItem('favoriteRecipes', arrayInString);\n    setInitialFavoriteRecipes(newRenderArray);\n  };\n\n  const renderElements = (array) => {\n    const initialarray = [...array];\n    const finalArray = initialarray\n      .map((foodOrDrink, index) => (\n        <FavoriteRecipesCards\n          title={ foodOrDrink.name }\n          key={ index }\n          index={ index }\n          id={ foodOrDrink.id }\n          thumb={ foodOrDrink.image }\n          type={ foodOrDrink.type }\n          tags={ foodOrDrink.tags }\n          category={ foodOrDrink.category }\n          doneDate={ foodOrDrink.doneDate }\n          area={ foodOrDrink.area }\n          alcoholicOrNot={ foodOrDrink.alcoholicOrNot }\n          removeFavorite={ removeFavorite }\n        />\n      ));\n    return finalArray;\n  };\n  return (\n    <div className=\"profiles\">\n      <HeaderNoSearch title=\"Receitas Favoritas\" />\n      <div>\n        <div className=\"profile-buttons\">\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ resetArrayToRender }\n          >\n            All\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ filterByFoods }\n          >\n            Food\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ filterByDrinks }\n          >\n            Drinks\n          </button>\n        </div>\n      </div>\n      {atualFavoriteRecipes === undefined ? (\n        <p>Loading</p>\n      ) : (\n        renderElements(atualFavoriteRecipes)\n      )}\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n","import React, { useContext, useEffect, useState } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchFoodDetailById } from '../services/foodApiFunctions';\nimport { fetchAllDrinkRecipes } from '../services/drinkApiFunctions';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport './recipes.css';\n\nfunction RecipesDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedDrinks] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n  const { foodDetail, setFoodDetail, setId, id } = useContext(RecipesContext);\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n  };\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'comida',\n      area: 'Italian',\n      category: foodDetail.strCategory,\n      alcoholicOrNot: '',\n      name: foodDetail.strMeal,\n      image: foodDetail.strMealThumb,\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify(id));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/comidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({ mensagem: 'Link copiado!' });\n  };\n  const recomendedDrink = async () => {\n    const allDrinks = await fetchAllDrinkRecipes();\n    const sixDrinks = allDrinks.drinks.slice(zero, six);\n    console.log(sixDrinks);\n    setRecomendedDrinks(sixDrinks);\n  };\n  useEffect(() => {\n    recomendedDrink();\n    const { match } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchFoodDetailById(idRandom).then((response) => setFoodDetail(response.meals[0]));\n  }, [props, setFoodDetail, setId]);\n\n  useEffect(() => {\n    const allIngredients = [];\n    for (let i = zero; i <= fifty; i += 1) {\n      if (foodDetail[`strIngredient${i}`]) {\n        allIngredients.push({\n          nomeIngrediente: foodDetail[`strIngredient${i}`],\n          medida: foodDetail[`strMeasure${i}`],\n        });\n      }\n    }\n    setIngredients(allIngredients);\n  }, [foodDetail]);\n\n  return (\n    <div className=\"main_recipe\">\n      <img\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da comida\"\n        src={ foodDetail.strMealThumb }\n      />\n      <div className=\"initial-informations\">\n        <h2 data-testid=\"recipe-title\">{foodDetail.strMeal}</h2>\n        <p data-testid=\"recipe-category\">{foodDetail.strCategory}</p>\n        <div className=\"interation-buttons\">\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt=\"compartilhar\"\n            onClick={ copyClipboard }\n          />\n          {clipboard.mensagem}\n          <button type=\"button\" onClick={ handlerFavorite }>\n            <img\n              data-testid=\"favorite-btn\"\n              src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n              alt=\"Icone Favoritar\"\n            />\n          </button>\n        </div>\n      </div>\n      <div>\n        <div className=\"ingredients\">\n          <h3>Ingredientes</h3>\n          {ingredients.map((item, index) => (\n            <span\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              <p>{`${item.nomeIngrediente}`}</p>\n              <p className=\"measure\">{`(${item.medida})`}</p>\n            </span>\n          ))}\n        </div>\n        <div className=\"prepare\">\n          <h3>Modo de preparo</h3>\n          <p data-testid=\"instructions\">{foodDetail.strInstructions}</p>\n        </div>\n      </div>\n      <div data-testid=\"video\" src={ foodDetail.strYoutube } />\n      <div className=\"slider\">\n        <Slider { ...settings }>\n          {recomended.map((item, index) => {\n            if (index > six) return null;\n            return (\n              <div key={ index } data-testid={ `${index}-recomendation-card` }>\n                <img alt=\"imagem\" src={ item.strDrinkThumb } />\n                <p data-testid={ `${index}-recomendation-title` }>\n                  {item.strDrink}\n                </p>\n              </div>\n            );\n          })}\n        </Slider>\n      </div>\n      <Link to={ `/comidas/${id}/in-progress` }>\n        <button\n          className=\"iniciarReceita\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Iniciar receita\n        </button>\n      </Link>\n    </div>\n  );\n}\nRecipesDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default RecipesDetails;\n","import React, { useContext, useEffect, useState } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchAllFoodRecipes } from '../services/foodApiFunctions';\nimport { fetchDrinkDetailById } from '../services/drinkApiFunctions';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport './recipes.css';\n\nfunction DrinksDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedRecipes] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n\n  const {\n    drinkDetail,\n    setDrinkDetail,\n    setId,\n    id,\n  } = useContext(RecipesContext);\n\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n  };\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: drinkDetail.strCategory,\n      alcoholicOrNot: drinkDetail.strAlcoholic,\n      name: drinkDetail.strDrink,\n      image: drinkDetail.strDrinkThumb,\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify([id]));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/bebidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({ mensagem: 'Link copiado!' });\n  };\n\n  const recomendedFood = async () => {\n    const allFoods = await fetchAllFoodRecipes();\n    const sixFoods = allFoods.meals.slice(zero, six);\n    console.log(sixFoods);\n    setRecomendedRecipes(sixFoods);\n  };\n\n  useEffect(() => {\n    recomendedFood();\n    const { match } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchDrinkDetailById(idRandom)\n      .then((response) => setDrinkDetail(response.drinks[0]));\n  }, [setDrinkDetail, setId, props]);\n\n  useEffect(() => {\n    const allIngredients = [];\n    for (let i = zero; i <= fifty; i += 1) {\n      if (drinkDetail[`strIngredient${i}`]) {\n        allIngredients.push(\n          { nomeIngrediente: drinkDetail[`strIngredient${i}`],\n            medida: drinkDetail[`strMeasure${i}`] },\n        );\n      }\n    }\n    setIngredients(allIngredients);\n  }, [drinkDetail]);\n\n  return (\n    <div className=\"main_recipe\">\n      {console.log(drinkDetail.idDrink)}\n      <img\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da comida\"\n        src={ drinkDetail.strDrinkThumb }\n      />\n      <div className=\"initial-informations\">\n        <h2\n          data-testid=\"recipe-title\"\n        >\n          {drinkDetail.strDrink}\n        </h2>\n        <p\n          data-testid=\"recipe-category\"\n        >\n          {drinkDetail.strAlcoholic}\n        </p>\n        <div className=\"interation-buttons\">\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt=\"compartilhar\"\n            onClick={ copyClipboard }\n          />\n          { clipboard.mensagem }\n          <input\n            type=\"image\"\n            onClick={ handlerFavorite }\n            data-testid=\"favorite-btn\"\n            src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n            alt=\"Icone Favoritar\"\n          />\n        </div>\n      </div>\n      <div className=\"ingredients\">\n        <h3>Ingredientes</h3>\n        {\n          ingredients.map(\n            (item, index) => (\n              <span\n                key={ index }\n              >\n                <p\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                >\n                  { `${item.nomeIngrediente}` }\n                </p>\n                <p className=\"measure\">\n                  {`(${item.medida})`}\n                </p>\n              </span>\n            ),\n          )\n        }\n      </div>\n      <div className=\"prepare\">\n        <h3>Modo de preparo</h3>\n        <p\n          data-testid=\"instructions\"\n        >\n          {drinkDetail.strInstructions}\n        </p>\n      </div>\n      Receitas recomendadas\n      <div className=\"slider\">\n        <Slider { ...settings }>\n          {\n            recomended.map(\n              (item, index) => {\n                if (index > six) return null;\n                return (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-recomendation-card` }\n                  >\n                    <img alt=\"imagem\" src={ item.strMealThumb } />\n                    <p\n                      data-testid={ `${index}-recomendation-title` }\n                    >\n                      {item.strMeal}\n                    </p>\n                  </div>\n                );\n              },\n            )\n          }\n        </Slider>\n      </div>\n      <Link to={ `/bebidas/${id}/in-progress` }>\n        <button\n          className=\"iniciarReceita\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Iniciar receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default DrinksDetails;\n","import React from 'react';\nimport HeaderNoSearch from '../components/HeaderNoSearch';\nimport Footer from '../components/Footer';\n\nfunction NotFound() {\n  return (\n    <div>\n      <HeaderNoSearch title=\"NotFound\" />\n      <h1>Not Found</h1>\n      <Footer />\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RecipesProvider from './context/RecipesProvider';\nimport Login from './pages/Login';\nimport MainRecipes from './pages/MainRecipes';\nimport MainDrinks from './pages/MainDrinks';\nimport Explorer from './pages/Explorer';\nimport ExplorerFood from './pages/ExplorerFood';\nimport ExplorerDrinks from './pages/ExplorerDrinks';\nimport ExplorerFoodIngredients from './pages/ExplorerFoodIngredients';\nimport ExplorerDrinksIngredients from './pages/ExplorerDrinksIngredients';\nimport ExplorerFoodArea from './pages/ExplorerFoodArea';\nimport Profile from './pages/Profile';\nimport DoneRecipes from './pages/DoneRecipes';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport RecipesDetails from './pages/RecipesDetails';\nimport DrinksDetails from './pages/DrinksDetails';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <RecipesProvider>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/comidas\" component={ MainRecipes } />\n          <Route exact path=\"/bebidas\" component={ MainDrinks } />\n          <Route\n            exact\n            path=\"/comidas/:id\"\n            render={ (props) => <RecipesDetails { ...props } /> }\n          />\n          <Route\n            exact\n            path=\"/bebidas/:id\"\n            render={ (props) => <DrinksDetails { ...props } /> }\n          />\n          <Route exact path=\"/comidas/{id-da-receita}/in-progress\" />\n          <Route exact path=\"/bebidas/{id-da-receita}/in-progress\" />\n          <Route exact path=\"/explorar\" component={ Explorer } />\n          <Route exact path=\"/explorar/comidas\" component={ ExplorerFood } />\n          <Route exact path=\"/explorar/bebidas\" component={ ExplorerDrinks } />\n          <Route\n            exact\n            path=\"/explorar/comidas/ingredientes\"\n            component={ ExplorerFoodIngredients }\n          />\n          <Route\n            exact\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ ExplorerDrinksIngredients }\n          />\n          <Route exact path=\"/explorar/comidas/area\" component={ ExplorerFoodArea } />\n          <Route exact path=\"/perfil\" component={ Profile } />\n          <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } />\n          <Route exact path=\"/receitas-feitas\" component={ DoneRecipes } />\n          <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n        </BrowserRouter>\n      </RecipesProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}