{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/ExplorerFoodArea.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom'; // import PropTypes from 'prop-types';\n\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainCards from '../components/MainCards';\n\nfunction ExplorerFoodArea() {\n  const [foodData, setFoodData] = useState([]);\n  const [selectedValue, setSelectedValue] = useState('all');\n  const [allRegionFoodsToRender, setAllRegionFoodsToRender] = useState([]);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const resetFoodsToRender = () => {\n    setAllRegionFoodsToRender(foodData.meals);\n  };\n\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then(response => setFoodData(response));\n  }, []);\n  useEffect(() => {\n    setAllRegionFoodsToRender(foodData.meals);\n  }, [foodData]);\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodAreas().then(response => setAllFiltersToRender(response.meals));\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n\n    if (selectedValue === 'all') {\n      resetFoodsToRender();\n    } else {\n      foodApiFunctions.fetchFilterFoodByArea(selectedValue).then(response => setAllRegionFoodsToRender(response.meals));\n    }\n\n    setLoading(false);\n  }, [selectedValue]);\n\n  const regionSelected = event => {\n    const {\n      target\n    } = event;\n    const {\n      value\n    } = target;\n    setSelectedValue(value);\n  };\n\n  const renderFilters = array => {\n    const finalArray = array.map((filter, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: filter.strArea,\n      \"data-testid\": `${filter.strArea}-category-filter`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, filter.strArea));\n    const buttonAll = /*#__PURE__*/React.createElement(\"option\", {\n      value: \"all\",\n      \"data-testid\": \"All-category-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, \"All\");\n    finalArray.unshift(buttonAll);\n    return finalArray;\n  };\n\n  const renderTwelveElements = array => {\n    if (array === null) {\n      return alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n    }\n\n    if (array.length === 1) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/comidas/${array[0].idMeal}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const eleven = 11;\n    const finalArray = array.filter((_someFood, index) => index <= eleven).map((food, index) => /*#__PURE__*/React.createElement(MainCards, {\n      thumb: food.strMealThumb,\n      title: food.strMeal,\n      key: index,\n      index: index,\n      id: food.idMeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n    return finalArray;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Origem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), allFiltersToRender === undefined ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedValue,\n    onChange: e => regionSelected(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, renderFilters(allFiltersToRender)), allRegionFoodsToRender === undefined || loading === true ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Loading\") : renderTwelveElements(allRegionFoodsToRender), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExplorerFoodArea;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/ExplorerFoodArea.js"],"names":["React","useState","useEffect","Redirect","foodApiFunctions","Header","Footer","MainCards","ExplorerFoodArea","foodData","setFoodData","selectedValue","setSelectedValue","allRegionFoodsToRender","setAllRegionFoodsToRender","allFiltersToRender","setAllFiltersToRender","loading","setLoading","resetFoodsToRender","meals","fetchAllFoodRecipes","then","response","fetchAllFoodAreas","fetchFilterFoodByArea","regionSelected","event","target","value","renderFilters","array","finalArray","map","filter","index","strArea","buttonAll","unshift","renderTwelveElements","alert","length","idMeal","eleven","_someFood","food","strMealThumb","strMeal","undefined","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainCards from '../components/MainCards';\n\nfunction ExplorerFoodArea() {\n  const [foodData, setFoodData] = useState([]);\n  const [selectedValue, setSelectedValue] = useState('all');\n  const [allRegionFoodsToRender, setAllRegionFoodsToRender] = useState([]);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const resetFoodsToRender = () => {\n    setAllRegionFoodsToRender(foodData.meals);\n  };\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then((response) => setFoodData(response));\n  }, []);\n  useEffect(() => {\n    setAllRegionFoodsToRender(foodData.meals);\n  }, [foodData]);\n  useEffect(() => {\n    foodApiFunctions\n      .fetchAllFoodAreas()\n      .then((response) => setAllFiltersToRender(response.meals));\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    if (selectedValue === 'all') {\n      resetFoodsToRender();\n    } else {\n      foodApiFunctions\n        .fetchFilterFoodByArea(selectedValue)\n        .then((response) => setAllRegionFoodsToRender(response.meals));\n    }\n    setLoading(false);\n  }, [selectedValue]);\n  const regionSelected = (event) => {\n    const { target } = event;\n    const { value } = target;\n    setSelectedValue(value);\n  };\n  const renderFilters = (array) => {\n    const finalArray = array\n      .map((filter, index) => (\n        <option key={ index } value={filter.strArea} data-testid={ `${filter.strArea}-category-filter` }>{filter.strArea}</option>\n      ));\n    const buttonAll = (\n      <option value=\"all\" data-testid=\"All-category-filter\">All</option>\n    );\n    finalArray.unshift(buttonAll);\n    return finalArray;\n  };\n  const renderTwelveElements = (array) => {\n    if (array === null) {\n      return alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n    }\n    if (array.length === 1) {\n      return <Redirect to={ `/comidas/${array[0].idMeal}` } />;\n    }\n    const eleven = 11;\n    const finalArray = array\n      .filter((_someFood, index) => index <= eleven)\n      .map((food, index) => (\n        <MainCards\n          thumb={ food.strMealThumb }\n          title={ food.strMeal }\n          key={ index }\n          index={ index }\n          id={ food.idMeal }\n        />\n      ));\n    return finalArray;\n  };\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" />\n      {allFiltersToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        <select value={ selectedValue } onChange={ (e) => regionSelected(e) }>\n          {renderFilters(allFiltersToRender)}\n        </select>\n      )}\n      {(allRegionFoodsToRender === undefined) || (loading === true) ? (\n        <p>Loading</p>\n      ) : (\n        renderTwelveElements(allRegionFoodsToRender)\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerFoodArea;\n"]},"metadata":{},"sourceType":"module"}