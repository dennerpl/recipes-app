{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/HeaderSearchBar.js\";\nimport React, { useState, useContext } from 'react';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction HeaderSearchBar() {\n  const {\n    pathName,\n    fetchByIngredients\n  } = useContext(RecipesContext);\n  const [radioButtonValue, setRadioButtonValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n\n  const searchByText = e => {\n    setInputValue(e.target.value);\n    console.log(inputValue);\n  };\n\n  const getRadioValue = e => {\n    setRadioButtonValue(e.target.value);\n    console.log(radioButtonValue);\n  };\n\n  const getApiData = () => {\n    console.log(pathName);\n\n    if (inputValue.length > 1 && radioButtonValue === 'primeiraLetra') {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      switch (radioButtonValue) {\n        case \"ingrediente\":\n          fetchByIngredients(inputValue);\n          break;\n\n        case \"nome\":\n          console.log('requisição por ingrediente de comida');\n          break;\n\n        default:\n          console.log('requisição por primeira letra da comida');\n          break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"searchInput\",\n    placeholder: \"Buscar Receita\",\n    \"data-testid\": \"search-input\",\n    name: \"searchText\",\n    onChange: e => searchByText(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"ingredients\",\n    name: \"searchType\",\n    value: \"ingrediente\",\n    \"data-testid\": \"ingredient-search-radio\",\n    onChange: e => getRadioValue(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), \"Ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"name\",\n    name: \"searchType\",\n    value: \"nome\",\n    \"data-testid\": \"name-search-radio\",\n    onChange: e => getRadioValue(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), \"Nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstLetter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    if: \"firstLetter\",\n    name: \"searchType\",\n    value: \"primeiraLetra\",\n    \"data-testid\": \"first-letter-search-radio\",\n    onChange: e => getRadioValue(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), \"Primeira Letra\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: () => getApiData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Buscar\"));\n}\n\nexport default HeaderSearchBar;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/HeaderSearchBar.js"],"names":["React","useState","useContext","RecipesContext","HeaderSearchBar","pathName","fetchByIngredients","radioButtonValue","setRadioButtonValue","inputValue","setInputValue","searchByText","e","target","value","console","log","getRadioValue","getApiData","length","alert"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction HeaderSearchBar() {\n  const { pathName, fetchByIngredients } = useContext(RecipesContext);\n  const [radioButtonValue, setRadioButtonValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n\n  const searchByText = (e) => {\n    setInputValue(e.target.value);\n    console.log(inputValue);\n  };\n\n  const getRadioValue = (e) => {\n    setRadioButtonValue(e.target.value);\n    console.log(radioButtonValue);\n  };\n  const getApiData = () => {\n    console.log(pathName);\n    if (inputValue.length > 1 && radioButtonValue === 'primeiraLetra') {\n      alert('Sua busca deve conter somente 1 (um) caracter');\n    } else {\n      switch (radioButtonValue) {\n        case \"ingrediente\":\n          fetchByIngredients(inputValue);\n          break;\n          case \"nome\":\n            console.log('requisição por ingrediente de comida');\n            break;\n      \n        default:\n          console.log('requisição por primeira letra da comida');\n          break;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        id=\"searchInput\"\n        placeholder=\"Buscar Receita\"\n        data-testid=\"search-input\"\n        name=\"searchText\"\n        onChange={ (e) => searchByText(e) }\n      />\n      <div>\n        <label htmlFor=\"ingredients\">\n          <input\n            type=\"radio\"\n            id=\"ingredients\"\n            name=\"searchType\"\n            value=\"ingrediente\"\n            data-testid=\"ingredient-search-radio\"\n            onChange={ (e) => getRadioValue(e) }\n          />\n          Ingrediente\n        </label>\n        <label htmlFor=\"name\">\n          <input\n            type=\"radio\"\n            id=\"name\"\n            name=\"searchType\"\n            value=\"nome\"\n            data-testid=\"name-search-radio\"\n            onChange={ (e) => getRadioValue(e) }\n          />\n          Nome\n        </label>\n        <label htmlFor=\"firstLetter\">\n          <input\n            type=\"radio\"\n            if=\"firstLetter\"\n            name=\"searchType\"\n            value=\"primeiraLetra\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ (e) => getRadioValue(e) }\n          />\n          Primeira Letra\n        </label>\n      </div>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => getApiData() }\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nexport default HeaderSearchBar;\n"]},"metadata":{},"sourceType":"module"}