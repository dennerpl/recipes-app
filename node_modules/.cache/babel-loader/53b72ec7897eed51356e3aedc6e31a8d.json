{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/context/RecipesProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\n\nfunction RecipesProvider({\n  children\n}) {\n  const [foodsToRender, setFoodsToRender] = useState([]);\n  const [drinksToRender, setDrinksToRender] = useState([]);\n  const [login, setLogin] = useState({\n    email: '',\n    password: ''\n  });\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [pathName, setPathName] = useState('');\n  const [foodData, setFoodData] = useState([]);\n  const [drinkData, setDrinkData] = useState([]);\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then(response => setFoodData(response));\n  }, []);\n  useEffect(() => {\n    drinkApiFunctions.fetchAllDrinkRecipes().then(response => setDrinkData(response));\n  }, []);\n  useEffect(() => {\n    setDrinksToRender(drinkData.drinks);\n  }, [drinkData]);\n  useEffect(() => {\n    setFoodsToRender(foodData.meals);\n  }, [foodData]);\n\n  const toggleSearchBar = () => {\n    setShowSearchBar(!showSearchBar);\n  };\n\n  const fetchByIngredients = value => {\n    if (pathName === '/comidas') {\n      foodApiFunctions.fetchFoodByIngredient(value).then(response => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions.fetchDrinkByIngredient(value).then(response => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const fetchInIngredientCard = (ingredient, path) => {\n    if (path === '/explorar/comidas/ingredientes') {\n      foodApiFunctions.fetchFoodByIngredient(ingredient).then(response => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions.fetchDrinkByIngredient(ingredient).then(response => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const fetchByName = value => {\n    if (pathName === '/comidas') {\n      foodApiFunctions.fetchFoodByName(value).then(response => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions.fetchDrinkByName(value).then(response => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const fetchByFirstLetter = value => {\n    if (pathName === '/comidas') {\n      foodApiFunctions.fetchFoodByFirstLetter(value).then(response => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions.fetchDrinkByFirstLetter(value).then(response => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const context = {\n    login,\n    setLogin,\n    showSearchBar,\n    toggleSearchBar,\n    pathName,\n    setPathName,\n    foodsToRender,\n    setFoodsToRender,\n    drinksToRender,\n    setDrinksToRender,\n    fetchByIngredients,\n    fetchByName,\n    fetchByFirstLetter,\n    foodData,\n    drinkData,\n    fetchInIngredientCard\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object]).isRequired\n};\nexport default RecipesProvider;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/context/RecipesProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesContext","drinkApiFunctions","foodApiFunctions","RecipesProvider","children","foodsToRender","setFoodsToRender","drinksToRender","setDrinksToRender","login","setLogin","email","password","showSearchBar","setShowSearchBar","pathName","setPathName","foodData","setFoodData","drinkData","setDrinkData","fetchAllFoodRecipes","then","response","fetchAllDrinkRecipes","drinks","meals","toggleSearchBar","fetchByIngredients","value","fetchFoodByIngredient","fetchDrinkByIngredient","fetchInIngredientCard","ingredient","path","fetchByName","fetchFoodByName","fetchDrinkByName","fetchByFirstLetter","fetchFoodByFirstLetter","fetchDrinkByFirstLetter","context","propTypes","oneOfType","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\n\nfunction RecipesProvider({ children }) {\n  const [foodsToRender, setFoodsToRender] = useState([]);\n  const [drinksToRender, setDrinksToRender] = useState([]);\n  const [login, setLogin] = useState({ email: '', password: '' });\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [pathName, setPathName] = useState('');\n  const [foodData, setFoodData] = useState([]);\n  const [drinkData, setDrinkData] = useState([]);\n\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then((response) => setFoodData(response));\n  }, []);\n\n  useEffect(() => {\n    drinkApiFunctions.fetchAllDrinkRecipes().then((response) => setDrinkData(response));\n  }, []);\n\n  useEffect(() => {\n    setDrinksToRender(drinkData.drinks);\n  }, [drinkData]);\n\n  useEffect(() => {\n    setFoodsToRender(foodData.meals);\n  }, [foodData]);\n\n  const toggleSearchBar = () => {\n    setShowSearchBar(!showSearchBar);\n  };\n\n  const fetchByIngredients = (value) => {\n    if (pathName === '/comidas') {\n      foodApiFunctions\n        .fetchFoodByIngredient(value)\n        .then((response) => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByIngredient(value)\n        .then((response) => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const fetchInIngredientCard = (ingredient, path) => {\n    if (path === '/explorar/comidas/ingredientes') {\n      foodApiFunctions\n        .fetchFoodByIngredient(ingredient)\n        .then((response) => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByIngredient(ingredient)\n        .then((response) => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const fetchByName = (value) => {\n    if (pathName === '/comidas') {\n      foodApiFunctions\n        .fetchFoodByName(value)\n        .then((response) => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByName(value)\n        .then((response) => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const fetchByFirstLetter = (value) => {\n    if (pathName === '/comidas') {\n      foodApiFunctions\n        .fetchFoodByFirstLetter(value)\n        .then((response) => setFoodsToRender(response.meals));\n    } else {\n      drinkApiFunctions\n        .fetchDrinkByFirstLetter(value)\n        .then((response) => setDrinksToRender(response.drinks));\n    }\n  };\n\n  const context = {\n    login,\n    setLogin,\n    showSearchBar,\n    toggleSearchBar,\n    pathName,\n    setPathName,\n    foodsToRender,\n    setFoodsToRender,\n    drinksToRender,\n    setDrinksToRender,\n    fetchByIngredients,\n    fetchByName,\n    fetchByFirstLetter,\n    foodData,\n    drinkData,\n    fetchInIngredientCard,\n  };\n\n  return (\n    <div>\n      <RecipesContext.Provider value={ context }>\n        {children}\n      </RecipesContext.Provider>\n    </div>\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default RecipesProvider;\n"]},"metadata":{},"sourceType":"module"}