{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/DoneRecipesCards.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from \"../images/shareIcon.svg\";\n\nfunction DoneRecipesCards({\n  thumb,\n  title,\n  index,\n  id,\n  type,\n  tags,\n  category,\n  doneDate,\n  area,\n  alcoholicOrNot\n}) {\n  const [copyMessage, setCopyMessage] = useState('');\n\n  const url = text => {\n    let returnText = '';\n\n    switch (text) {\n      case 'bebida':\n        returnText = 'bebidas';\n        break;\n\n      case 'comida':\n        returnText = 'comidas';\n        break;\n\n      default:\n        returnText = text;\n        break;\n    }\n\n    return returnText;\n  };\n\n  const copyClipboard = () => {\n    const urlarray = window.location.href.split('/');\n    const urlToCopy = `${urlarray[0]}//${urlarray[2]}/${type}/${id}`;\n    clipboardCopy(urlToCopy);\n    setCopyMessage('Link copiado!');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"compartilhar\",\n    onClick: copyClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), copyMessage, /*#__PURE__*/React.createElement(Link, {\n    to: `/${url(type)}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: thumb,\n    alt: \"Imagem do profile\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Category:\", ' ', /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, `${area}${alcoholicOrNot} - ${category}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div\",\n    \"data-testid\": \"page-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Feito em:\", ' ', /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, doneDate)), tags.map((tag, counter) => /*#__PURE__*/React.createElement(\"p\", {\n    key: counter,\n    \"data-testid\": `${index}-${tag}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, tag)))));\n}\n\nDoneRecipesCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default DoneRecipesCards;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/DoneRecipesCards.js"],"names":["React","useState","Link","PropTypes","clipboardCopy","DoneRecipesCards","thumb","title","index","id","type","tags","category","doneDate","area","alcoholicOrNot","copyMessage","setCopyMessage","url","text","returnText","copyClipboard","urlarray","window","location","href","split","urlToCopy","shareIcon","map","tag","counter","propTypes","string","isRequired","number","arrayOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction DoneRecipesCards({\n  thumb,\n  title,\n  index,\n  id,\n  type,\n  tags,\n  category,\n  doneDate,\n  area,\n  alcoholicOrNot,\n}) {\n  const [copyMessage, setCopyMessage] = useState('');\n  const url = (text) => {\n    let returnText = '';\n    switch (text) {\n    case 'bebida':\n      returnText = 'bebidas';\n      break;\n    case 'comida':\n      returnText = 'comidas';\n      break;\n    default:\n      returnText = text;\n      break;\n    }\n    return returnText;\n  };\n\n  const copyClipboard = () => {\n    const urlarray = window.location.href.split('/');\n    const urlToCopy = `${urlarray[0]}//${urlarray[2]}/${type}/${id}`;\n    clipboardCopy(urlToCopy);\n    setCopyMessage('Link copiado!');\n  };\n\n  return (\n    <div>\n      <input\n        type=\"image\"\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n        alt=\"compartilhar\"\n        onClick={ copyClipboard }\n      />\n      {copyMessage}\n      <Link to={ `/${url(type)}/${id}` }>\n        <div>\n          <img\n            src={ thumb }\n            alt=\"Imagem do profile\"\n            data-testid={ `${index}-horizontal-image` }\n          />\n          <div>\n            Category:\n            {' '}\n            <p data-testid={ `${index}-horizontal-top-text` }>\n              {`${area}${alcoholicOrNot} - ${category}`}\n            </p>\n          </div>\n          <div className=\"div\" data-testid=\"page-div\">\n            <p data-testid={ `${index}-horizontal-name` }>{title}</p>\n          </div>\n          <div>\n            Feito em:\n            {' '}\n            <p data-testid={ `${index}-horizontal-done-date` }>{doneDate}</p>\n          </div>\n          {tags.map((tag, counter) => (\n            <p key={ counter } data-testid={ `${index}-${tag}-horizontal-tag` }>\n              {tag}\n            </p>\n          ))}\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nDoneRecipesCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  doneDate: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default DoneRecipesCards;\n"]},"metadata":{},"sourceType":"module"}