{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/RecipesInProgress.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHearthIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHearthIcon from \"../images/whiteHeartIcon.svg\";\nimport RecipesInProgressCard from '../components/RecipesInProgressCard';\n\nfunction RecipesInProgress() {\n  // useParams, learned in https://medium.com/better-programming/using-url-parameters-and-query-strings-with-react-router-fffdcea7a8e9\n  const {\n    id,\n    type\n  } = useParams();\n  const [foodObject, setFoodObject] = useState({});\n  const [drinkObject, setDrinkObject] = useState({});\n  const [allIngredients, setAllIngredients] = useState([]);\n  const fifty = 50;\n  const zero = 0;\n  useEffect(() => {\n    if (type === 'comidas') {\n      foodApiFunctions.fetchFoodDetailById(id).then(response => setFoodObject(...response.meals));\n    } else {\n      drinkApiFunctions.fetchDrinkDetailById(id).then(response => setDrinkObject(...response.drinks));\n    }\n  }, [id, type]);\n\n  const createArrayOfIngredients = object => {\n    const createdArrayOfIngredients = [];\n\n    for (let i = zero; i <= fifty; i += 1) {\n      if (object[`strIngredient${i}`]) {\n        createdArrayOfIngredients.push({\n          nomeIngrediente: object[`strIngredient${i}`],\n          medida: object[`strMeasure${i}`]\n        });\n      }\n    }\n\n    setAllIngredients(createdArrayOfIngredients);\n  };\n\n  useEffect(() => {\n    createArrayOfIngredients(foodObject);\n  }, [foodObject]);\n  useEffect(() => {\n    createArrayOfIngredients(drinkObject);\n  }, [drinkObject]);\n\n  const renderCard = (object, arrayOfIngredients) => /*#__PURE__*/React.createElement(RecipesInProgressCard, {\n    thumb: type === 'comidas' ? object.strMealThumb : object.strDrinkThumb,\n    title: type === 'comidas' ? object.strMeal : object.strDrink,\n    category: type === 'comidas' ? object.strCategory : object.strCategory,\n    id: type === 'comidas' ? object.idMeal : object.idDrink,\n    ingredients: arrayOfIngredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n\n  const switchRenderCard = () => {\n    let card;\n\n    switch (type) {\n      case 'comidas':\n        card = renderCard(foodObject, allIngredients);\n        break;\n\n      default:\n        card = renderCard(drinkObject, allIngredients);\n        break;\n    }\n\n    return card;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, switchRenderCard());\n}\n\nexport default RecipesInProgress;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/RecipesInProgress.js"],"names":["React","useContext","useEffect","useState","useParams","clipboardCopy","RecipesContext","foodApiFunctions","drinkApiFunctions","RecipesInProgressCard","RecipesInProgress","id","type","foodObject","setFoodObject","drinkObject","setDrinkObject","allIngredients","setAllIngredients","fifty","zero","fetchFoodDetailById","then","response","meals","fetchDrinkDetailById","drinks","createArrayOfIngredients","object","createdArrayOfIngredients","i","push","nomeIngrediente","medida","renderCard","arrayOfIngredients","strMealThumb","strDrinkThumb","strMeal","strDrink","strCategory","idMeal","idDrink","switchRenderCard","card"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport RecipesInProgressCard from '../components/RecipesInProgressCard';\n\nfunction RecipesInProgress() {\n  // useParams, learned in https://medium.com/better-programming/using-url-parameters-and-query-strings-with-react-router-fffdcea7a8e9\n  const { id, type } = useParams();\n  const [foodObject, setFoodObject] = useState({});\n  const [drinkObject, setDrinkObject] = useState({});\n  const [allIngredients, setAllIngredients] = useState([]);\n  const fifty = 50;\n  const zero = 0;\n  useEffect(() => {\n    if (type === 'comidas') {\n      foodApiFunctions\n        .fetchFoodDetailById(id)\n        .then((response) => setFoodObject(...response.meals));\n    } else {\n      drinkApiFunctions\n        .fetchDrinkDetailById(id)\n        .then((response) => setDrinkObject(...response.drinks));\n    }\n  }, [id, type]);\n\n  const createArrayOfIngredients = (object) => {\n    const createdArrayOfIngredients = [];\n    for (let i = zero; i <= fifty; i += 1) {\n      if (object[`strIngredient${i}`]) {\n        createdArrayOfIngredients.push(\n          { nomeIngrediente: object[`strIngredient${i}`],\n            medida: object[`strMeasure${i}`] },\n        );\n      }\n    }\n    setAllIngredients(createdArrayOfIngredients);\n  };\n\n  useEffect(() => {\n    createArrayOfIngredients(foodObject);\n  }, [foodObject]);\n\n  useEffect(() => {\n    createArrayOfIngredients(drinkObject);\n  }, [drinkObject]);\n\n  const renderCard = (object, arrayOfIngredients) => (\n    <RecipesInProgressCard\n      thumb={ type === 'comidas' ? object.strMealThumb : object.strDrinkThumb }\n      title={ type === 'comidas' ? object.strMeal : object.strDrink }\n      category={ type === 'comidas' ? object.strCategory : object.strCategory }\n      id={ type === 'comidas' ? object.idMeal : object.idDrink }\n      ingredients={ arrayOfIngredients }\n    />\n  );\n\n  const switchRenderCard = () => {\n    let card;\n    switch (type) {\n    case 'comidas':\n      card = renderCard(foodObject, allIngredients);\n      break;\n\n    default:\n      card = renderCard(drinkObject, allIngredients);\n      break;\n    }\n    return card;\n  };\n  return (\n    <div>{ switchRenderCard() }</div>\n  );\n}\n\nexport default RecipesInProgress;\n"]},"metadata":{},"sourceType":"module"}