{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/RecipesDetails.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchFoodDetailById } from '../services/foodApiFunctions';\nimport { fetchAllDrinkRecipes } from '../services/drinkApiFunctions';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHearthIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHearthIcon from \"../images/whiteHeartIcon.svg\";\nimport './recipes.css';\n\nfunction RecipesDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedDrinks] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n  const {\n    foodDetail,\n    setFoodDetail,\n    setId,\n    id\n  } = useContext(RecipesContext);\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 2\n  };\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'comida',\n      area: 'Italian',\n      category: foodDetail.strCategory,\n      alcoholicOrNot: '',\n      name: foodDetail.strMeal,\n      image: foodDetail.strMealThumb\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify(id));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/comidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({\n      mensagem: 'Link copiado!'\n    });\n  };\n\n  const recomendedDrink = async () => {\n    const allDrinks = await fetchAllDrinkRecipes();\n    const sixDrinks = allDrinks.drinks.slice(zero, six);\n    console.log(sixDrinks);\n    setRecomendedDrinks(sixDrinks);\n  };\n\n  useEffect(() => {\n    recomendedDrink();\n    const {\n      match\n    } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchFoodDetailById(idRandom).then(response => setFoodDetail(response.meals[0]));\n  }, [props, setFoodDetail, setId]);\n  useEffect(() => {\n    const allIngredients = [];\n\n    for (let i = zero; i <= fifty; i += 1) {\n      if (foodDetail[`strIngredient${i}`]) {\n        allIngredients.push({\n          nomeIngrediente: foodDetail[`strIngredient${i}`],\n          medida: foodDetail[`strMeasure${i}`]\n        });\n      }\n    }\n\n    setIngredients(allIngredients);\n  }, [foodDetail]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main_recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    alt: \"Imagem da comida\",\n    src: foodDetail.strMealThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"initial-informations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, foodDetail.strMeal), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, foodDetail.strCategory), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"interation-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"compartilhar\",\n    onClick: copyClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), clipboard.mensagem, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handlerFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: isFavorite ? blackHearthIcon : whiteHearthIcon,\n    alt: \"Icone Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Ingredientes\"), ingredients.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, `${item.nomeIngrediente}`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"measure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, `(${item.medida})`)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prepare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Modo de preparo\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, foodDetail.strInstructions))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"video\",\n    src: foodDetail.strYoutube,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), recomended.map((item, index) => {\n    if (index > six) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      \"data-testid\": `${index}-recomendation-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"imagem\",\n      src: item.strDrinkThumb,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-recomendation-title`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, item.strDrink));\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: `/comidas/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"iniciarReceita\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"Iniciar receita\")));\n}\n\nRecipesDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default RecipesDetails;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/RecipesDetails.js"],"names":["React","useContext","useEffect","useState","Slider","Link","PropTypes","clipboardCopy","RecipesContext","fetchFoodDetailById","fetchAllDrinkRecipes","RecipesDetails","props","ingredients","setIngredients","recomended","setRecomendedDrinks","isFavorite","setIsFavorite","clipboard","setClipboard","foodDetail","setFoodDetail","setId","id","zero","six","fifty","settings","dots","infinite","speed","slidesToShow","slidesToScroll","handlerFavorite","favoriteRec","type","area","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","localStorage","setItem","JSON","stringify","copyClipboard","urlarray","window","location","href","split","url","mensagem","recomendedDrink","allDrinks","sixDrinks","drinks","slice","console","log","match","idRandom","params","then","response","meals","allIngredients","i","push","nomeIngrediente","medida","shareIcon","blackHearthIcon","whiteHearthIcon","map","item","index","strInstructions","strYoutube","strDrinkThumb","strDrink","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchFoodDetailById } from '../services/foodApiFunctions';\nimport { fetchAllDrinkRecipes } from '../services/drinkApiFunctions';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport './recipes.css';\n\nfunction RecipesDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedDrinks] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n  const { foodDetail, setFoodDetail, setId, id } = useContext(RecipesContext);\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n  };\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'comida',\n      area: 'Italian',\n      category: foodDetail.strCategory,\n      alcoholicOrNot: '',\n      name: foodDetail.strMeal,\n      image: foodDetail.strMealThumb,\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify(id));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/comidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({ mensagem: 'Link copiado!' });\n  };\n  const recomendedDrink = async () => {\n    const allDrinks = await fetchAllDrinkRecipes();\n    const sixDrinks = allDrinks.drinks.slice(zero, six);\n    console.log(sixDrinks);\n    setRecomendedDrinks(sixDrinks);\n  };\n  useEffect(() => {\n    recomendedDrink();\n    const { match } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchFoodDetailById(idRandom).then((response) => setFoodDetail(response.meals[0]));\n  }, [props, setFoodDetail, setId]);\n\n  useEffect(() => {\n    const allIngredients = [];\n    for (let i = zero; i <= fifty; i += 1) {\n      if (foodDetail[`strIngredient${i}`]) {\n        allIngredients.push({\n          nomeIngrediente: foodDetail[`strIngredient${i}`],\n          medida: foodDetail[`strMeasure${i}`],\n        });\n      }\n    }\n    setIngredients(allIngredients);\n  }, [foodDetail]);\n\n  return (\n    <div className=\"main_recipe\">\n      <img\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da comida\"\n        src={ foodDetail.strMealThumb }\n      />\n      <div className=\"initial-informations\">\n        <h2 data-testid=\"recipe-title\">{foodDetail.strMeal}</h2>\n        <p data-testid=\"recipe-category\">{foodDetail.strCategory}</p>\n        <div className=\"interation-buttons\">\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt=\"compartilhar\"\n            onClick={ copyClipboard }\n          />\n          {clipboard.mensagem}\n          <button type=\"button\" onClick={ handlerFavorite }>\n            <img\n              data-testid=\"favorite-btn\"\n              src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n              alt=\"Icone Favoritar\"\n            />\n          </button>\n        </div>\n      </div>\n      <div>\n        <div className=\"ingredients\">\n          <h3>Ingredientes</h3>\n          {ingredients.map((item, index) => (\n            <span\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              <p>{`${item.nomeIngrediente}`}</p>\n              <p className=\"measure\">{`(${item.medida})`}</p>\n            </span>\n          ))}\n        </div>\n        <div className=\"prepare\">\n          <h3>Modo de preparo</h3>\n          <p data-testid=\"instructions\">{foodDetail.strInstructions}</p>\n        </div>\n      </div>\n      <div data-testid=\"video\" src={ foodDetail.strYoutube } />\n      <div className=\"slider\">\n        <Slider { ...settings }>\n          {recomended.map((item, index) => {\n            if (index > six) return null;\n            return (\n              <div key={ index } data-testid={ `${index}-recomendation-card` }>\n                <img alt=\"imagem\" src={ item.strDrinkThumb } />\n                <p data-testid={ `${index}-recomendation-title` }>\n                  {item.strDrink}\n                </p>\n              </div>\n            );\n          })}\n        </Slider>\n      </div>\n      <Link to={ `/comidas/${id}/in-progress` }>\n        <button\n          className=\"iniciarReceita\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Iniciar receita\n        </button>\n      </Link>\n    </div>\n  );\n}\nRecipesDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default RecipesDetails;\n"]},"metadata":{},"sourceType":"module"}