{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/context/RecipesProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\n\nfunction RecipesProvider({\n  children\n}) {\n  const [foodsToRender, setFoodsToRender] = useState([]);\n  const [drinksToRender, setDrinksToRender] = useState([]);\n  const [drinkIngredient, setDrinkIngredient] = useState('');\n  const [login, setLogin] = useState({\n    email: '',\n    password: ''\n  });\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [pathName, setPathName] = useState('');\n\n  const toggleSearchBar = () => {\n    setShowSearchBar(!showSearchBar);\n  };\n\n  const fetchDrinkByIngredients = value => {\n    drinkApiFunctions.fetchDrinkByIngredient(value).then(response => setDrinksToRender(response.drinks));\n  }; // useEffect(() => {\n  //   drinkApiFunctions.fetchDrinkByIngredient(drinkIngredient).then((response) => setDrinksToRender(response.drinks));\n  // }, [drinkIngredient]);\n\n\n  const context = {\n    login,\n    setLogin,\n    showSearchBar,\n    toggleSearchBar,\n    pathName,\n    setPathName,\n    foodsToRender,\n    setFoodsToRender,\n    drinksToRender,\n    setDrinksToRender,\n    fetchDrinkByIngredients\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RecipesContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object]).isRequired\n};\nexport default RecipesProvider;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/context/RecipesProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesContext","drinkApiFunctions","RecipesProvider","children","foodsToRender","setFoodsToRender","drinksToRender","setDrinksToRender","drinkIngredient","setDrinkIngredient","login","setLogin","email","password","showSearchBar","setShowSearchBar","pathName","setPathName","toggleSearchBar","fetchDrinkByIngredients","value","fetchDrinkByIngredient","then","response","drinks","context","propTypes","oneOfType","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,KAAKC,iBAAZ,MAAmC,+BAAnC;;AAGA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACrC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AAAEe,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAlC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMqB,eAAe,GAAG,MAAM;AAC5BH,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAIA,QAAMK,uBAAuB,GAAIC,KAAD,IAAW;AACzCnB,IAAAA,iBAAiB,CAACoB,sBAAlB,CAAyCD,KAAzC,EAAgDE,IAAhD,CAAsDC,QAAD,IAAchB,iBAAiB,CAACgB,QAAQ,CAACC,MAAV,CAApF;AACD,GAFD,CAZqC,CAgBrC;AACA;AACA;;;AAEA,QAAMC,OAAO,GAAG;AACdf,IAAAA,KADc;AAEdC,IAAAA,QAFc;AAGdG,IAAAA,aAHc;AAIdI,IAAAA,eAJc;AAKdF,IAAAA,QALc;AAMdC,IAAAA,WANc;AAOdb,IAAAA,aAPc;AAQdC,IAAAA,gBARc;AASdC,IAAAA,cATc;AAUdC,IAAAA,iBAVc;AAWdY,IAAAA;AAXc,GAAhB;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGM,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,QADH,CADF,CADF;AAOD;;AAEDD,eAAe,CAACwB,SAAhB,GAA4B;AAC1BvB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC4B,SAAV,CAAoB,CAAC5B,SAAS,CAAC6B,MAAX,CAApB,EAAwCC;AADxB,CAA5B;AAIA,eAAe3B,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\n\n\nfunction RecipesProvider({ children }) {\n  const [foodsToRender, setFoodsToRender] = useState([]);\n  const [drinksToRender, setDrinksToRender] = useState([]);\n  const [drinkIngredient, setDrinkIngredient] = useState('');\n  const [login, setLogin] = useState({ email: '', password: '' });\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [pathName, setPathName] = useState('');\n\n  const toggleSearchBar = () => {\n    setShowSearchBar(!showSearchBar);\n  };\n\n  const fetchDrinkByIngredients = (value) => {\n    drinkApiFunctions.fetchDrinkByIngredient(value).then((response) => setDrinksToRender(response.drinks));\n  };\n\n  // useEffect(() => {\n  //   drinkApiFunctions.fetchDrinkByIngredient(drinkIngredient).then((response) => setDrinksToRender(response.drinks));\n  // }, [drinkIngredient]);\n\n  const context = {\n    login,\n    setLogin,\n    showSearchBar,\n    toggleSearchBar,\n    pathName,\n    setPathName,\n    foodsToRender,\n    setFoodsToRender,\n    drinksToRender,\n    setDrinksToRender,\n    fetchDrinkByIngredients,\n  };\n\n  return (\n    <div>\n      <RecipesContext.Provider value={ context }>\n        {children}\n      </RecipesContext.Provider>\n    </div>\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default RecipesProvider;\n"]},"metadata":{},"sourceType":"module"}