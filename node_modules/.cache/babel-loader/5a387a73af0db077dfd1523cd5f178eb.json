{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/MainDrinks.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainDrinkCards from '../components/MainDrinkCards';\n\nfunction MainDrinks() {\n  const [data, setData] = useState([]);\n  const [drinksToRender, setDrinksToRender] = useState([]);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [filtersToRender, setFiltersToRender] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n  useEffect(() => {\n    drinkApiFunctions.fetchAllDrinkRecipes().then(response => setData(response));\n  }, []);\n  useEffect(() => {\n    drinkApiFunctions.fetchAllDrinkCategories().then(response => setAllFiltersToRender(response));\n  }, []);\n  useEffect(() => {\n    setDrinksToRender(data.drinks);\n  }, [data]);\n  useEffect(() => {\n    setFiltersToRender(allFiltersToRender.drinks);\n  }, [allFiltersToRender]);\n\n  const renderTwelveElements = array => {\n    const eleven = 11;\n    const finalArray = array.filter((_someDrink, index) => index <= eleven).map((drink, index) => /*#__PURE__*/React.createElement(MainDrinkCards, {\n      thumb: drink.strDrinkThumb,\n      title: drink.strDrink,\n      key: index,\n      index: index,\n      id: drink.idDrink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n    return finalArray;\n  };\n\n  const filterButton = category => {\n    if (filtered === false) {\n      // const oldArray = [...data.drinks];\n      // const newArray = oldArray.filter((food) => food.strCategory === category);\n      drinkApiFunctions.fetchFilterDrinkByCategory(category).then(response => setDrinksToRender(response.drinks));\n      setFiltered(true);\n    } else {\n      setDrinksToRender(data.drinks);\n      setFiltered(false);\n    }\n  };\n\n  const resetDrinksToRender = () => {\n    setDrinksToRender(data.drinks);\n    setFiltered(false);\n  };\n\n  const renderFilveFilters = array => {\n    const four = 4;\n    const finalArray = array.filter((_someFilter, index) => index <= four).map((filter, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: index,\n      \"data-testid\": `${filter.strCategory}-category-filter`,\n      onClick: () => filterButton(filter.strCategory),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, filter.strCategory));\n    const buttonAll = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: \"all\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: () => resetDrinksToRender(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, \"All\");\n    finalArray.push(buttonAll);\n    return finalArray;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), filtersToRender === undefined ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Loading\") : renderFilveFilters(filtersToRender), drinksToRender === undefined ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Loading\") : renderTwelveElements(drinksToRender), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MainDrinks;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/MainDrinks.js"],"names":["React","useState","useEffect","drinkApiFunctions","Header","Footer","MainDrinkCards","MainDrinks","data","setData","drinksToRender","setDrinksToRender","allFiltersToRender","setAllFiltersToRender","filtersToRender","setFiltersToRender","filtered","setFiltered","fetchAllDrinkRecipes","then","response","fetchAllDrinkCategories","drinks","renderTwelveElements","array","eleven","finalArray","filter","_someDrink","index","map","drink","strDrinkThumb","strDrink","idDrink","filterButton","category","fetchFilterDrinkByCategory","resetDrinksToRender","renderFilveFilters","four","_someFilter","strCategory","buttonAll","push","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as drinkApiFunctions from '../services/drinkApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainDrinkCards from '../components/MainDrinkCards';\n\nfunction MainDrinks() {\n  const [data, setData] = useState([]);\n  const [drinksToRender, setDrinksToRender] = useState([]);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [filtersToRender, setFiltersToRender] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n\n  useEffect(() => {\n    drinkApiFunctions.fetchAllDrinkRecipes().then((response) => setData(response));\n  }, []);\n\n  useEffect(() => {\n    drinkApiFunctions\n      .fetchAllDrinkCategories()\n      .then((response) => setAllFiltersToRender(response));\n  }, []);\n\n  useEffect(() => {\n    setDrinksToRender(data.drinks);\n  }, [data]);\n\n  useEffect(() => {\n    setFiltersToRender(allFiltersToRender.drinks);\n  }, [allFiltersToRender]);\n\n  const renderTwelveElements = (array) => {\n    const eleven = 11;\n    const finalArray = array\n      .filter((_someDrink, index) => index <= eleven)\n      .map((drink, index) => (\n        <MainDrinkCards\n          thumb={ drink.strDrinkThumb }\n          title={ drink.strDrink }\n          key={ index }\n          index={ index }\n          id={ drink.idDrink }\n        />\n      ));\n    return finalArray;\n  };\n\n  const filterButton = (category) => {\n    if (filtered === false) {\n      // const oldArray = [...data.drinks];\n      // const newArray = oldArray.filter((food) => food.strCategory === category);\n      drinkApiFunctions\n        .fetchFilterDrinkByCategory(category)\n        .then((response) => setDrinksToRender(response.drinks));\n      setFiltered(true);\n    } else {\n      setDrinksToRender(data.drinks);\n      setFiltered(false);\n    }\n  };\n\n  const resetDrinksToRender = () => {\n    setDrinksToRender(data.drinks);\n    setFiltered(false);\n  };\n\n  const renderFilveFilters = (array) => {\n    const four = 4;\n    const finalArray = array\n      .filter((_someFilter, index) => index <= four)\n      .map((filter, index) => (\n        <button\n          type=\"button\"\n          key={ index }\n          data-testid={ `${filter.strCategory}-category-filter` }\n          onClick={ () => filterButton(filter.strCategory) }\n        >\n          {filter.strCategory}\n        </button>\n      ));\n    const buttonAll = (\n      <button\n        type=\"button\"\n        key=\"all\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => resetDrinksToRender() }\n      >\n        All\n      </button>\n    );\n    finalArray.push(buttonAll);\n    return finalArray;\n  };\n\n  return (\n    <div>\n      <Header title=\"Comidas\" />\n      {filtersToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        renderFilveFilters(filtersToRender)\n      )}\n      {drinksToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        renderTwelveElements(drinksToRender)\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default MainDrinks;\n"]},"metadata":{},"sourceType":"module"}