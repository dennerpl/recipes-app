{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/MainRecipes.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainCards from '../components/MainCards';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction MainRecipes(props) {\n  const {\n    match\n  } = props;\n  const {\n    url\n  } = match;\n  const {\n    setPathName\n  } = useContext(RecipesContext);\n  const [data, setData] = useState([]);\n  const {\n    foodsToRender,\n    setFoodsToRender\n  } = useContext(RecipesContext);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [filtersToRender, setFiltersToRender] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then(response => setData(response));\n  }, []);\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodCategories().then(response => setAllFiltersToRender(response));\n  }, []);\n  useEffect(() => {\n    setPathName(url);\n  }, []);\n  useEffect(() => {\n    setFoodsToRender(data.meals);\n  }, [data]);\n  useEffect(() => {\n    setFiltersToRender(allFiltersToRender.meals);\n  }, [allFiltersToRender]);\n\n  const renderTwelveElements = array => {\n    if (array === null) {\n      return alert('teste');\n    } else if (array.length === 1) {\n      /*#__PURE__*/\n      React.createElement(Redirect, {\n        to: \"/bebidas/123143\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      });\n    }\n\n    const eleven = 11;\n    const finalArray = array.filter((_someFood, index) => index <= eleven).map((food, index) => /*#__PURE__*/React.createElement(MainCards, {\n      thumb: food.strMealThumb,\n      title: food.strMeal,\n      key: index,\n      index: index,\n      id: food.idMeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n    return finalArray;\n  };\n\n  const filterButton = category => {\n    if (filtered === false) {\n      // const oldArray = [...data.meals];\n      // const newArray = oldArray.filter((food) => food.strCategory === category);\n      foodApiFunctions.fetchFilterFoodByCategory(category).then(response => setFoodsToRender(response.meals));\n      setFiltered(true);\n    } else {\n      setFoodsToRender(data.meals);\n      setFiltered(false);\n    }\n  };\n\n  const resetFoodsToRender = () => {\n    setFoodsToRender(data.meals);\n    setFiltered(false);\n  };\n\n  const renderFilveFilters = array => {\n    const four = 4;\n    const finalArray = array.filter((_someFilter, index) => index <= four).map((filter, index) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: index,\n      \"data-testid\": `${filter.strCategory}-category-filter`,\n      onClick: () => filterButton(filter.strCategory),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, filter.strCategory));\n    const buttonAll = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: \"all\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: () => resetFoodsToRender(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, \"All\");\n    finalArray.push(buttonAll);\n    return finalArray;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Comidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), filtersToRender === undefined ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Loading\") : renderFilveFilters(filtersToRender), foodsToRender === undefined ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Loading\") : renderTwelveElements(foodsToRender), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MainRecipes;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/MainRecipes.js"],"names":["React","useState","useEffect","useContext","Redirect","foodApiFunctions","Header","Footer","MainCards","RecipesContext","MainRecipes","props","match","url","setPathName","data","setData","foodsToRender","setFoodsToRender","allFiltersToRender","setAllFiltersToRender","filtersToRender","setFiltersToRender","filtered","setFiltered","fetchAllFoodRecipes","then","response","fetchAllFoodCategories","meals","renderTwelveElements","array","alert","length","eleven","finalArray","filter","_someFood","index","map","food","strMealThumb","strMeal","idMeal","filterButton","category","fetchFilterFoodByCategory","resetFoodsToRender","renderFilveFilters","four","_someFilter","strCategory","buttonAll","push","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as foodApiFunctions from '../services/foodApiFunctions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport MainCards from '../components/MainCards';\nimport RecipesContext from '../context/RecipesContext';\n\nfunction MainRecipes(props) {\n  const { match } = props;\n  const { url } = match;\n  const { setPathName } = useContext(RecipesContext);\n  const [data, setData] = useState([]);\n  const { foodsToRender, setFoodsToRender } = useContext(RecipesContext);\n  const [allFiltersToRender, setAllFiltersToRender] = useState([]);\n  const [filtersToRender, setFiltersToRender] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n\n  useEffect(() => {\n    foodApiFunctions.fetchAllFoodRecipes().then((response) => setData(response));\n  }, []);\n\n  useEffect(() => {\n    foodApiFunctions\n      .fetchAllFoodCategories()\n      .then((response) => setAllFiltersToRender(response));\n  }, []);\n\n  useEffect(() => {\n    setPathName(url);\n  }, []);\n\n  useEffect(() => {\n    setFoodsToRender(data.meals);\n  }, [data]);\n\n  useEffect(() => {\n    setFiltersToRender(allFiltersToRender.meals);\n  }, [allFiltersToRender]);\n\n  const renderTwelveElements = (array) => {\n    if(array === null) {\n      return alert('teste');\n    } else if(array.length === 1) {\n      <Redirect to=\"/bebidas/123143\" />\n    }\n    const eleven = 11;\n    const finalArray = array\n      .filter((_someFood, index) => index <= eleven)\n      .map((food, index) => (\n        <MainCards\n          thumb={ food.strMealThumb }\n          title={ food.strMeal }\n          key={ index }\n          index={ index }\n          id={ food.idMeal }\n        />\n      ));\n    return finalArray;\n  };\n\n  const filterButton = (category) => {\n    if (filtered === false) {\n      // const oldArray = [...data.meals];\n      // const newArray = oldArray.filter((food) => food.strCategory === category);\n      foodApiFunctions\n        .fetchFilterFoodByCategory(category)\n        .then((response) => setFoodsToRender(response.meals));\n      setFiltered(true);\n    } else {\n      setFoodsToRender(data.meals);\n      setFiltered(false);\n    }\n  };\n\n  const resetFoodsToRender = () => {\n    setFoodsToRender(data.meals);\n    setFiltered(false);\n  };\n\n  const renderFilveFilters = (array) => {\n    const four = 4;\n    const finalArray = array\n      .filter((_someFilter, index) => index <= four)\n      .map((filter, index) => (\n        <button\n          type=\"button\"\n          key={ index }\n          data-testid={ `${filter.strCategory}-category-filter` }\n          onClick={ () => filterButton(filter.strCategory) }\n        >\n          {filter.strCategory}\n        </button>\n      ));\n    const buttonAll = (\n      <button\n        type=\"button\"\n        key=\"all\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => resetFoodsToRender() }\n      >\n        All\n      </button>\n    );\n    finalArray.push(buttonAll);\n    return finalArray;\n  };\n\n  return (\n    <div>\n      <Header title=\"Comidas\" />\n      {filtersToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        renderFilveFilters(filtersToRender)\n      )}\n      {foodsToRender === undefined ? (\n        <p>Loading</p>\n      ) : (\n        renderTwelveElements(foodsToRender)\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default MainRecipes;\n"]},"metadata":{},"sourceType":"module"}