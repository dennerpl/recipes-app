{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/DrinksDetails.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchAllFoodRecipes } from '../services/foodApiFunctions';\nimport { fetchDrinkDetailById } from '../services/drinkApiFunctions';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHearthIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHearthIcon from \"../images/whiteHeartIcon.svg\";\nimport './recipes.css';\n\nfunction DrinksDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedRecipes] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n  const {\n    drinkDetail,\n    setDrinkDetail,\n    setId,\n    id\n  } = useContext(RecipesContext);\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 2\n  };\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: drinkDetail.strCategory,\n      alcoholicOrNot: drinkDetail.strAlcoholic,\n      name: drinkDetail.strDrink,\n      image: drinkDetail.strDrinkThumb\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify([id]));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/bebidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({\n      mensagem: 'Link copiado!'\n    });\n  };\n\n  const recomendedFood = async () => {\n    const allFoods = await fetchAllFoodRecipes();\n    const sixFoods = allFoods.meals.slice(zero, six);\n    console.log(sixFoods);\n    setRecomendedRecipes(sixFoods);\n  };\n\n  useEffect(() => {\n    recomendedFood();\n    const {\n      match\n    } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchDrinkDetailById(idRandom).then(response => setDrinkDetail(response.drinks[0]));\n  }, [setDrinkDetail, setId, props]);\n  useEffect(() => {\n    const allIngredients = [];\n\n    for (let i = zero; i <= fifty; i += 1) {\n      if (drinkDetail[`strIngredient${i}`]) {\n        allIngredients.push({\n          nomeIngrediente: drinkDetail[`strIngredient${i}`],\n          medida: drinkDetail[`strMeasure${i}`]\n        });\n      }\n    }\n\n    setIngredients(allIngredients);\n  }, [drinkDetail]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main_recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, console.log(drinkDetail.idDrink), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    alt: \"Imagem da comida\",\n    src: drinkDetail.strDrinkThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"initial-informations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, drinkDetail.strDrink), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, drinkDetail.strAlcoholic), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"interation-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"compartilhar\",\n    onClick: copyClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), clipboard.mensagem, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: handlerFavorite,\n    \"data-testid\": \"favorite-btn\",\n    src: isFavorite ? blackHearthIcon : whiteHearthIcon,\n    alt: \"Icone Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Ingredientes\"), ingredients.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, `${item.nomeIngrediente}`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"measure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, `(${item.medida})`)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prepare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"Modo de preparo\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, drinkDetail.strInstructions)), \"Receitas recomendadas\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), recomended.map((item, index) => {\n    if (index > six) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      \"data-testid\": `${index}-recomendation-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"imagem\",\n      src: item.strMealThumb,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-recomendation-title`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, item.strMeal));\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: `/bebidas/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"iniciarReceita\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"Iniciar receita\")));\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default DrinksDetails;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/DrinksDetails.js"],"names":["React","useContext","useEffect","useState","Slider","Link","PropTypes","clipboardCopy","RecipesContext","fetchAllFoodRecipes","fetchDrinkDetailById","DrinksDetails","props","ingredients","setIngredients","recomended","setRecomendedRecipes","isFavorite","setIsFavorite","clipboard","setClipboard","drinkDetail","setDrinkDetail","setId","id","zero","six","fifty","settings","dots","infinite","speed","slidesToShow","slidesToScroll","handlerFavorite","favoriteRec","type","area","category","strCategory","alcoholicOrNot","strAlcoholic","name","strDrink","image","strDrinkThumb","localStorage","setItem","JSON","stringify","copyClipboard","urlarray","window","location","href","split","url","mensagem","recomendedFood","allFoods","sixFoods","meals","slice","console","log","match","idRandom","params","then","response","drinks","allIngredients","i","push","nomeIngrediente","medida","idDrink","shareIcon","blackHearthIcon","whiteHearthIcon","map","item","index","strInstructions","strMealThumb","strMeal","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchAllFoodRecipes } from '../services/foodApiFunctions';\nimport { fetchDrinkDetailById } from '../services/drinkApiFunctions';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport './recipes.css';\n\nfunction DrinksDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedRecipes] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n\n  const {\n    drinkDetail,\n    setDrinkDetail,\n    setId,\n    id,\n  } = useContext(RecipesContext);\n\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n  };\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: drinkDetail.strCategory,\n      alcoholicOrNot: drinkDetail.strAlcoholic,\n      name: drinkDetail.strDrink,\n      image: drinkDetail.strDrinkThumb,\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify([id]));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/bebidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({ mensagem: 'Link copiado!' });\n  };\n\n  const recomendedFood = async () => {\n    const allFoods = await fetchAllFoodRecipes();\n    const sixFoods = allFoods.meals.slice(zero, six);\n    console.log(sixFoods);\n    setRecomendedRecipes(sixFoods);\n  };\n\n  useEffect(() => {\n    recomendedFood();\n    const { match } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchDrinkDetailById(idRandom)\n      .then((response) => setDrinkDetail(response.drinks[0]));\n  }, [setDrinkDetail, setId, props]);\n\n  useEffect(() => {\n    const allIngredients = [];\n    for (let i = zero; i <= fifty; i += 1) {\n      if (drinkDetail[`strIngredient${i}`]) {\n        allIngredients.push(\n          { nomeIngrediente: drinkDetail[`strIngredient${i}`],\n            medida: drinkDetail[`strMeasure${i}`] },\n        );\n      }\n    }\n    setIngredients(allIngredients);\n  }, [drinkDetail]);\n\n  return (\n    <div className=\"main_recipe\">\n      {console.log(drinkDetail.idDrink)}\n      <img\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da comida\"\n        src={ drinkDetail.strDrinkThumb }\n      />\n      <div className=\"initial-informations\">\n        <h2\n          data-testid=\"recipe-title\"\n        >\n          {drinkDetail.strDrink}\n        </h2>\n        <p\n          data-testid=\"recipe-category\"\n        >\n          {drinkDetail.strAlcoholic}\n        </p>\n        <div className=\"interation-buttons\">\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt=\"compartilhar\"\n            onClick={ copyClipboard }\n          />\n          { clipboard.mensagem }\n          <input\n            type=\"image\"\n            onClick={ handlerFavorite }\n            data-testid=\"favorite-btn\"\n            src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n            alt=\"Icone Favoritar\"\n          />\n        </div>\n      </div>\n      <div className=\"ingredients\">\n        <h3>Ingredientes</h3>\n        {\n          ingredients.map(\n            (item, index) => (\n              <span\n                key={ index }\n              >\n                <p\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                >\n                  { `${item.nomeIngrediente}` }\n                </p>\n                <p className=\"measure\">\n                  {`(${item.medida})`}\n                </p>\n              </span>\n            ),\n          )\n        }\n      </div>\n      <div className=\"prepare\">\n        <h3>Modo de preparo</h3>\n        <p\n          data-testid=\"instructions\"\n        >\n          {drinkDetail.strInstructions}\n        </p>\n      </div>\n      Receitas recomendadas\n      <div className=\"slider\">\n        <Slider { ...settings }>\n          {\n            recomended.map(\n              (item, index) => {\n                if (index > six) return null;\n                return (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-recomendation-card` }\n                  >\n                    <img alt=\"imagem\" src={ item.strMealThumb } />\n                    <p\n                      data-testid={ `${index}-recomendation-title` }\n                    >\n                      {item.strMeal}\n                    </p>\n                  </div>\n                );\n              },\n            )\n          }\n        </Slider>\n      </div>\n      <Link to={ `/bebidas/${id}/in-progress` }>\n        <button\n          className=\"iniciarReceita\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Iniciar receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default DrinksDetails;\n"]},"metadata":{},"sourceType":"module"}