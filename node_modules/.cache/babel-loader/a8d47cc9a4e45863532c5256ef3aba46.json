{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/FavoriteRecipesCards.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHearthIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHearthIcon from \"../images/whiteHeartIcon.svg\";\nimport './donerecipes.css';\n\nfunction FavoriteRecipesCards({\n  thumb,\n  title,\n  index,\n  id,\n  type,\n  category,\n  area,\n  alcoholicOrNot,\n  removeFavorite\n}) {\n  const [copyMessage, setCopyMessage] = useState('');\n  const [isFavorite] = useState(true);\n\n  const url = text => {\n    let returnText = '';\n\n    switch (text) {\n      case 'bebida':\n        returnText = 'bebidas';\n        break;\n\n      case 'comida':\n        returnText = 'comidas';\n        break;\n\n      default:\n        returnText = text;\n        break;\n    }\n\n    return returnText;\n  };\n\n  const copyClipboard = () => {\n    const urlarray = window.location.href.split('/');\n    const urlToCopy = `${urlarray[0]}//${urlarray[2]}/${type}s/${id}`;\n    clipboardCopy(urlToCopy);\n    setCopyMessage('Link copiado!');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: \"compartilhar\",\n    onClick: copyClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), copyMessage, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => removeFavorite(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: isFavorite ? blackHearthIcon : whiteHearthIcon,\n    alt: \"Icone Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/${url(type)}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img_recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: thumb,\n    alt: \"Imagem do profile\",\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Category:\", ' ', /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, `${area}${alcoholicOrNot} - ${category}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div\",\n    \"data-testid\": \"page-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, title)))));\n}\n\nFavoriteRecipesCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  removeFavorite: PropTypes.func.isRequired\n};\nexport default FavoriteRecipesCards;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/FavoriteRecipesCards.js"],"names":["React","useState","Link","PropTypes","clipboardCopy","FavoriteRecipesCards","thumb","title","index","id","type","category","area","alcoholicOrNot","removeFavorite","copyMessage","setCopyMessage","isFavorite","url","text","returnText","copyClipboard","urlarray","window","location","href","split","urlToCopy","shareIcon","blackHearthIcon","whiteHearthIcon","propTypes","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport './donerecipes.css';\n\nfunction FavoriteRecipesCards({\n  thumb,\n  title,\n  index,\n  id,\n  type,\n  category,\n  area,\n  alcoholicOrNot,\n  removeFavorite,\n}) {\n  const [copyMessage, setCopyMessage] = useState('');\n  const [isFavorite] = useState(true);\n  const url = (text) => {\n    let returnText = '';\n    switch (text) {\n    case 'bebida':\n      returnText = 'bebidas';\n      break;\n    case 'comida':\n      returnText = 'comidas';\n      break;\n    default:\n      returnText = text;\n      break;\n    }\n    return returnText;\n  };\n\n  const copyClipboard = () => {\n    const urlarray = window.location.href.split('/');\n    const urlToCopy = `${urlarray[0]}//${urlarray[2]}/${type}s/${id}`;\n    clipboardCopy(urlToCopy);\n    setCopyMessage('Link copiado!');\n  };\n\n  return (\n    <div>\n      <input\n        type=\"image\"\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n        alt=\"compartilhar\"\n        onClick={ copyClipboard }\n      />\n      {copyMessage}\n      <button\n        type=\"button\"\n        onClick={ () => removeFavorite(id) }\n      >\n        <img\n          data-testid={ `${index}-horizontal-favorite-btn` }\n          src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n          alt=\"Icone Favoritar\"\n        />\n      </button>\n      <Link to={ `/${url(type)}/${id}` }>\n        <div className=\"img_recipes\">\n          <img\n            src={ thumb }\n            alt=\"Imagem do profile\"\n            data-testid={ `${index}-horizontal-image` }\n          />\n          <div>\n            Category:\n            {' '}\n            <p data-testid={ `${index}-horizontal-top-text` }>\n              {`${area}${alcoholicOrNot} - ${category}`}\n            </p>\n          </div>\n          <div className=\"div\" data-testid=\"page-div\">\n            <p data-testid={ `${index}-horizontal-name` }>{title}</p>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nFavoriteRecipesCards.propTypes = {\n  title: PropTypes.string.isRequired,\n  thumb: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  removeFavorite: PropTypes.func.isRequired,\n};\n\nexport default FavoriteRecipesCards;\n"]},"metadata":{},"sourceType":"module"}