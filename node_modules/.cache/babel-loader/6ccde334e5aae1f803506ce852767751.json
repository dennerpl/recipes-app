{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/DrinksDetails.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchAllFoodRecipes } from '../services/foodApiFunctions';\nimport { fetchDrinkDetailById } from '../services/drinkApiFunctions';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHearthIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHearthIcon from \"../images/whiteHeartIcon.svg\";\nimport './recipes.css';\n\nfunction DrinksDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedRecipes] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n  const {\n    drinkDetail,\n    setDrinkDetail,\n    setId,\n    id\n  } = useContext(RecipesContext);\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: drinkDetail.strCategory,\n      alcoholicOrNot: drinkDetail.strAlcoholic,\n      name: drinkDetail.strDrink,\n      image: drinkDetail.strDrinkThumb\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify([id]));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/bebidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({\n      mensagem: 'Link copiado!'\n    });\n  };\n\n  const recomendedFood = async () => {\n    const allFoods = await fetchAllFoodRecipes();\n    const sixFoods = allFoods.meals.slice(zero, six);\n    console.log(sixFoods);\n    setRecomendedRecipes(sixFoods);\n  };\n\n  useEffect(() => {\n    recomendedFood();\n    const {\n      match\n    } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchDrinkDetailById(idRandom).then(response => setDrinkDetail(response.drinks[0]));\n  }, [setDrinkDetail, setId, props]);\n  useEffect(() => {\n    const allIngredients = [];\n\n    for (let i = zero; i <= fifty; i += 1) {\n      if (drinkDetail[`strIngredient${i}`]) {\n        allIngredients.push({\n          nomeIngrediente: drinkDetail[`strIngredient${i}`],\n          medida: drinkDetail[`strMeasure${i}`]\n        });\n      }\n    }\n\n    setIngredients(allIngredients);\n  }, [drinkDetail]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, console.log(drinkDetail.idDrink), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    alt: \"Imagem da comida\",\n    src: drinkDetail.strDrinkThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, drinkDetail.strDrink), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"compartilhar\",\n    onClick: copyClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), clipboard.mensagem, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: handlerFavorite,\n    \"data-testid\": \"favorite-btn\",\n    src: isFavorite ? blackHearthIcon : whiteHearthIcon,\n    alt: \"Icone Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, drinkDetail.strAlcoholic), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Ingredientes\", ingredients.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, `${item.nomeIngrediente} ${item.medida}`)))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, drinkDetail.strInstructions), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"Receitas recomendadas\", recomended.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": `${index}-recomendation-card`,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"recomendadas\",\n    src: item.strMealThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Link, {\n    to: `/bebidas/${id}/in-progress`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"iniciarReceita\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"Iniciar receita\")));\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default DrinksDetails;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/pages/DrinksDetails.js"],"names":["React","useContext","useEffect","useState","Link","PropTypes","clipboardCopy","RecipesContext","fetchAllFoodRecipes","fetchDrinkDetailById","DrinksDetails","props","ingredients","setIngredients","recomended","setRecomendedRecipes","isFavorite","setIsFavorite","clipboard","setClipboard","drinkDetail","setDrinkDetail","setId","id","zero","six","fifty","handlerFavorite","favoriteRec","type","area","category","strCategory","alcoholicOrNot","strAlcoholic","name","strDrink","image","strDrinkThumb","localStorage","setItem","JSON","stringify","copyClipboard","urlarray","window","location","href","split","url","mensagem","recomendedFood","allFoods","sixFoods","meals","slice","console","log","match","idRandom","params","then","response","drinks","allIngredients","i","push","nomeIngrediente","medida","idDrink","shareIcon","blackHearthIcon","whiteHearthIcon","map","item","index","strInstructions","strMealThumb","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport RecipesContext from '../context/RecipesContext';\nimport { fetchAllFoodRecipes } from '../services/foodApiFunctions';\nimport { fetchDrinkDetailById } from '../services/drinkApiFunctions';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\nimport './recipes.css';\n\nfunction DrinksDetails(props) {\n  const [ingredients, setIngredients] = useState([]);\n  const [recomended, setRecomendedRecipes] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n\n  const {\n    drinkDetail,\n    setDrinkDetail,\n    setId,\n    id,\n  } = useContext(RecipesContext);\n\n  const zero = 0;\n  const six = 6;\n  const fifty = 50;\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'bebida',\n      area: '',\n      category: drinkDetail.strCategory,\n      alcoholicOrNot: drinkDetail.strAlcoholic,\n      name: drinkDetail.strDrink,\n      image: drinkDetail.strDrinkThumb,\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify([id]));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/bebidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({ mensagem: 'Link copiado!' });\n  };\n\n  const recomendedFood = async () => {\n    const allFoods = await fetchAllFoodRecipes();\n    const sixFoods = allFoods.meals.slice(zero, six);\n    console.log(sixFoods);\n    setRecomendedRecipes(sixFoods);\n  };\n\n  useEffect(() => {\n    recomendedFood();\n    const { match } = props;\n    const idRandom = match.params.id;\n    setId(idRandom);\n    fetchDrinkDetailById(idRandom)\n      .then((response) => setDrinkDetail(response.drinks[0]));\n  }, [setDrinkDetail, setId, props]);\n\n  useEffect(() => {\n    const allIngredients = [];\n    for (let i = zero; i <= fifty; i += 1) {\n      if (drinkDetail[`strIngredient${i}`]) {\n        allIngredients.push(\n          { nomeIngrediente: drinkDetail[`strIngredient${i}`],\n            medida: drinkDetail[`strMeasure${i}`] },\n        );\n      }\n    }\n    setIngredients(allIngredients);\n  }, [drinkDetail]);\n\n  return (\n    <div>\n      {console.log(drinkDetail.idDrink)}\n      <img\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da comida\"\n        src={ drinkDetail.strDrinkThumb }\n      />\n      <h2\n        data-testid=\"recipe-title\"\n      >\n        {drinkDetail.strDrink}\n      </h2>\n      <input\n        type=\"image\"\n        data-testid=\"share-btn\"\n        src={ shareIcon }\n        alt=\"compartilhar\"\n        onClick={ copyClipboard }\n      />\n      { clipboard.mensagem }\n      <input\n        type=\"image\"\n        onClick={ handlerFavorite }\n        data-testid=\"favorite-btn\"\n        src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n        alt=\"Icone Favoritar\"\n      />\n      <p\n        data-testid=\"recipe-category\"\n      >\n        {drinkDetail.strAlcoholic}\n      </p>\n      <div>\n        Ingredientes\n        {\n          ingredients.map(\n            (item, index) => (\n              <span\n                key={ index }\n              >\n                <p\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                >\n                  { `${item.nomeIngrediente} ${item.medida}` }\n                </p>\n              </span>\n            ),\n          )\n        }\n      </div>\n      <p\n        data-testid=\"instructions\"\n      >\n        {drinkDetail.strInstructions}\n      </p>\n      <div>\n        Receitas recomendadas\n        {\n          recomended.map(\n            (item, index) => (\n              <span\n                data-testid={ `${index}-recomendation-card` }\n                key={ index }\n              >\n                <img alt=\"recomendadas\" src={ item.strMealThumb } />\n              </span>\n            ),\n          )\n        }\n      </div>\n      <Link to={ `/bebidas/${id}/in-progress` }>\n        <button\n          className=\"iniciarReceita\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Iniciar receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nDrinksDetails.propTypes = {\n  match: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default DrinksDetails;\n"]},"metadata":{},"sourceType":"module"}