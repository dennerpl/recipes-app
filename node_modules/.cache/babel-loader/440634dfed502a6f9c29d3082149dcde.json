{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/RecipesInProgressCard.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHearthIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHearthIcon from \"../images/whiteHeartIcon.svg\"; // import PropTypes from 'prop-types';\n\nfunction RecipesInProgressCard({\n  thumb,\n  title,\n  category,\n  id,\n  ingredients,\n  instructions\n}) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'comida',\n      area: 'Italian',\n      category,\n      alcoholicOrNot: '',\n      name: title,\n      image: thumb\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify(id));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/comidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({\n      mensagem: 'Link copiado!'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main_recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    alt: \"Imagem da comida\",\n    src: thumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"compartilhar\",\n    onClick: copyClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), clipboard.mensagem, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handlerFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: isFavorite ? blackHearthIcon : whiteHearthIcon,\n    alt: \"Icone Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, category), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Ingredientes\", ingredients.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `data-testid=${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, `${item.nomeIngrediente} ${item.medida}`)))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, instructions), /*#__PURE__*/React.createElement(Link, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"iniciarReceita\",\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Finalizar receita\")));\n} // RecipesInProgressCard.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   thumb: PropTypes.string.isRequired,\n//   index: PropTypes.number.isRequired,\n//   id: PropTypes.string.isRequired,\n// };\n\n\nexport default RecipesInProgressCard;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-recipes-app/sd-07-project-recipes-app/src/components/RecipesInProgressCard.js"],"names":["React","useState","Link","clipboardCopy","RecipesInProgressCard","thumb","title","category","id","ingredients","instructions","isFavorite","setIsFavorite","clipboard","setClipboard","handlerFavorite","favoriteRec","type","area","alcoholicOrNot","name","image","localStorage","setItem","JSON","stringify","copyClipboard","urlarray","window","location","href","split","url","mensagem","shareIcon","blackHearthIcon","whiteHearthIcon","map","item","index","nomeIngrediente","medida"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHearthIcon from '../images/blackHeartIcon.svg';\nimport whiteHearthIcon from '../images/whiteHeartIcon.svg';\n// import PropTypes from 'prop-types';\n\nfunction RecipesInProgressCard({ thumb, title, category, id, ingredients, instructions }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [clipboard, setClipboard] = useState('');\n\n  const handlerFavorite = () => {\n    const favoriteRec = {\n      id,\n      type: 'comida',\n      area: 'Italian',\n      category,\n      alcoholicOrNot: '',\n      name: title,\n      image: thumb,\n    };\n    localStorage.setItem('favoriteRecipes', JSON.stringify([favoriteRec]));\n    localStorage.setItem('favorites', JSON.stringify(id));\n    setIsFavorite(true);\n  };\n\n  const copyClipboard = async () => {\n    const urlarray = window.location.href.split('/');\n    const url = `${urlarray[0]}//${urlarray[2]}/comidas/${id}`;\n    await clipboardCopy(url);\n    setClipboard({ mensagem: 'Link copiado!' });\n  };\n\n  return (\n    <div className=\"main_recipe\">\n      <img\n        data-testid=\"recipe-photo\"\n        alt=\"Imagem da comida\"\n        src={ thumb }\n      />\n      <h2\n        data-testid=\"recipe-title\"\n      >\n        {title}\n      </h2>\n      <input\n        type=\"image\"\n        data-testid=\"share-btn\"\n        src={ shareIcon }\n        alt=\"compartilhar\"\n        onClick={ copyClipboard }\n      />\n      {clipboard.mensagem}\n      <button\n        type=\"button\"\n        onClick={ handlerFavorite }\n      >\n        <img\n          data-testid=\"favorite-btn\"\n          src={ isFavorite ? blackHearthIcon : whiteHearthIcon }\n          alt=\"Icone Favoritar\"\n        />\n      </button>\n      <p\n        data-testid=\"recipe-category\"\n      >\n        {category}\n      </p>\n      <div>\n        Ingredientes\n        {\n          ingredients.map(\n            (item, index) => (\n              <span\n                key={ index }\n              >\n                <p\n                  data-testid={ `data-testid=${index}-ingredient-step` }\n                >\n                  { `${item.nomeIngrediente} ${item.medida}` }\n                </p>\n              </span>\n            ),\n          )\n        }\n      </div>\n      <p\n        data-testid=\"instructions\"\n      >\n        {instructions}\n      </p>\n      <Link to=\"/receitas-feitas\">\n        <button\n          className=\"iniciarReceita\"\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n        >\n          Finalizar receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\n// RecipesInProgressCard.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   thumb: PropTypes.string.isRequired,\n//   index: PropTypes.number.isRequired,\n//   id: PropTypes.string.isRequired,\n// };\n\nexport default RecipesInProgressCard;\n"]},"metadata":{},"sourceType":"module"}